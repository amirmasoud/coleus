webpackJsonp([2],{

/***/ 412:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_cacheDirectory_true_presets_env_modules_false_targets_browsers_2_uglify_true_plugins_transform_object_rest_spread_transform_runtime_polyfill_false_helpers_false_syntax_dynamic_import_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(426);\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c73f4858_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(450);\nvar disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(445)\n}\nvar normalizeComponent = __webpack_require__(6)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-c73f4858\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_cacheDirectory_true_presets_env_modules_false_targets_browsers_2_uglify_true_plugins_transform_object_rest_spread_transform_runtime_polyfill_false_helpers_false_syntax_dynamic_import_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_c73f4858_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/js/pages/books/index.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-c73f4858\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-c73f4858\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvYm9va3MvaW5kZXgudnVlP2NmOWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLG1CQUFPLENBQUMsR0FBMFE7QUFDcFI7QUFDQSx5QkFBeUIsbUJBQU8sQ0FBQyxDQUErRDtBQUNoRztBQUNtWDtBQUNhO0FBQ2hZO0FBQ2lRO0FBQ2pRO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsd1RBQWM7QUFDaEIsRUFBRSw2TkFBZ0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxLQUFVLEdBQUc7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRWMsZ0ZBQWlCIiwiZmlsZSI6IjQxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkaXNwb3NlZCA9IGZhbHNlXG5mdW5jdGlvbiBpbmplY3RTdHlsZSAoc3NyQ29udGV4dCkge1xuICBpZiAoZGlzcG9zZWQpIHJldHVyblxuICByZXF1aXJlKFwiISF2dWUtc3R5bGUtbG9hZGVyIWNzcy1sb2FkZXI/c291cmNlTWFwIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleD97XFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtYzczZjQ4NThcXFwiLFxcXCJzY29wZWRcXFwiOnRydWUsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6dHJ1ZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9pbmRleC52dWVcIilcbn1cbnZhciBub3JtYWxpemVDb21wb25lbnQgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplclwiKVxuLyogc2NyaXB0ICovXG5leHBvcnQgKiBmcm9tIFwiISFiYWJlbC1sb2FkZXI/e1xcXCJjYWNoZURpcmVjdG9yeVxcXCI6dHJ1ZSxcXFwicHJlc2V0c1xcXCI6W1tcXFwiZW52XFxcIix7XFxcIm1vZHVsZXNcXFwiOmZhbHNlLFxcXCJ0YXJnZXRzXFxcIjp7XFxcImJyb3dzZXJzXFxcIjpbXFxcIj4gMiVcXFwiXSxcXFwidWdsaWZ5XFxcIjp0cnVlfX1dXSxcXFwicGx1Z2luc1xcXCI6W1xcXCJ0cmFuc2Zvcm0tb2JqZWN0LXJlc3Qtc3ByZWFkXFxcIixbXFxcInRyYW5zZm9ybS1ydW50aW1lXFxcIix7XFxcInBvbHlmaWxsXFxcIjpmYWxzZSxcXFwiaGVscGVyc1xcXCI6ZmFsc2V9XSxcXFwic3ludGF4LWR5bmFtaWMtaW1wb3J0XFxcIl19IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXNjcmlwdCZpbmRleD0wIS4vaW5kZXgudnVlXCJcbmltcG9ydCBfX3Z1ZV9zY3JpcHRfXyBmcm9tIFwiISFiYWJlbC1sb2FkZXI/e1xcXCJjYWNoZURpcmVjdG9yeVxcXCI6dHJ1ZSxcXFwicHJlc2V0c1xcXCI6W1tcXFwiZW52XFxcIix7XFxcIm1vZHVsZXNcXFwiOmZhbHNlLFxcXCJ0YXJnZXRzXFxcIjp7XFxcImJyb3dzZXJzXFxcIjpbXFxcIj4gMiVcXFwiXSxcXFwidWdsaWZ5XFxcIjp0cnVlfX1dXSxcXFwicGx1Z2luc1xcXCI6W1xcXCJ0cmFuc2Zvcm0tb2JqZWN0LXJlc3Qtc3ByZWFkXFxcIixbXFxcInRyYW5zZm9ybS1ydW50aW1lXFxcIix7XFxcInBvbHlmaWxsXFxcIjpmYWxzZSxcXFwiaGVscGVyc1xcXCI6ZmFsc2V9XSxcXFwic3ludGF4LWR5bmFtaWMtaW1wb3J0XFxcIl19IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXNjcmlwdCZpbmRleD0wIS4vaW5kZXgudnVlXCJcbi8qIHRlbXBsYXRlICovXG5pbXBvcnQgX192dWVfdGVtcGxhdGVfXyBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi1jNzNmNDg1OFxcXCIsXFxcImhhc1Njb3BlZFxcXCI6dHJ1ZSxcXFwiYnVibGVcXFwiOntcXFwidHJhbnNmb3Jtc1xcXCI6e319fSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vaW5kZXgudnVlXCJcbi8qIHRlbXBsYXRlIGZ1bmN0aW9uYWwgKi9cbnZhciBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18gPSBmYWxzZVxuLyogc3R5bGVzICovXG52YXIgX192dWVfc3R5bGVzX18gPSBpbmplY3RTdHlsZVxuLyogc2NvcGVJZCAqL1xudmFyIF9fdnVlX3Njb3BlSWRfXyA9IFwiZGF0YS12LWM3M2Y0ODU4XCJcbi8qIG1vZHVsZUlkZW50aWZpZXIgKHNlcnZlciBvbmx5KSAqL1xudmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18gPSBudWxsXG52YXIgQ29tcG9uZW50ID0gbm9ybWFsaXplQ29tcG9uZW50KFxuICBfX3Z1ZV9zY3JpcHRfXyxcbiAgX192dWVfdGVtcGxhdGVfXyxcbiAgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fLFxuICBfX3Z1ZV9zdHlsZXNfXyxcbiAgX192dWVfc2NvcGVJZF9fLFxuICBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fXG4pXG5Db21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInJlc291cmNlcy9qcy9wYWdlcy9ib29rcy9pbmRleC52dWVcIlxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7XG4gIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIGZhbHNlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtYzczZjQ4NThcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi1jNzNmNDg1OFwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBkaXNwb3NlZCA9IHRydWVcbiAgfSlcbn0pKCl9XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3Jlc291cmNlcy9qcy9wYWdlcy9ib29rcy9pbmRleC52dWVcbi8vIG1vZHVsZSBpZCA9IDQxMlxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///412\n");

/***/ }),

/***/ 426:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_graphql_tag__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_graphql_tag___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_graphql_tag__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_virtual_scroller_dist_vue_virtual_scroller_css__ = __webpack_require__(447);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_virtual_scroller_dist_vue_virtual_scroller_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue_virtual_scroller_dist_vue_virtual_scroller_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue_virtual_scroller__ = __webpack_require__(449);\nvar _templateObject = _taggedTemplateLiteral(['query Book($slug: String) {\\n        book(slug: $slug) {\\n          id\\n          title\\n          pages {\\n            id\\n            title\\n            is_header\\n          }\\n          collaborators {\\n            name\\n          }\\n        }\\n      }\\n      '], ['query Book($slug: String) {\\n        book(slug: $slug) {\\n          id\\n          title\\n          pages {\\n            id\\n            title\\n            is_header\\n          }\\n          collaborators {\\n            name\\n          }\\n        }\\n      }\\n      ']);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  components: { DynamicScroller: __WEBPACK_IMPORTED_MODULE_2_vue_virtual_scroller__[\"a\" /* DynamicScroller */], DynamicScrollerItem: __WEBPACK_IMPORTED_MODULE_2_vue_virtual_scroller__[\"b\" /* DynamicScrollerItem */] },\n\n  created: function created() {\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n\n\n  mounted: function mounted() {\n    window.addEventListener('resize', this.handleResize);\n  },\n\n  updated: function updated() {\n    this.$nextTick(function () {\n      this.width = document.querySelector('.sidebar-wrapper').clientWidth - 30 + 'px';\n      console.log(this.title);\n    });\n  },\n\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n  },\n\n  data: function data() {\n    return {\n      slug: this.$route.params['slug'],\n      book: null,\n      height: null,\n      width: null,\n      title: '',\n      top: 115,\n      fontSize: 'inherit',\n      menu: false,\n      index: 0,\n      path: this.$route,\n      show: false,\n      items: []\n    };\n  },\n\n\n  apollo: {\n    book: {\n      query: __WEBPACK_IMPORTED_MODULE_0_graphql_tag___default()(_templateObject),\n      variables: function variables() {\n        return {\n          slug: this.slug\n        };\n      },\n      result: function result(res) {\n        this.makeItems();\n      }\n    }\n  },\n\n  methods: {\n    getFirstId: function getFirstId(pages) {\n      for (var i = 0; i < pages.length - 1; i++) {\n        if (!pages[i].is_header) {\n          return pages[i].id;\n        }\n      }\n    },\n    bookContents: function bookContents(pages) {\n      if (this.title) {\n        var query = this.title;\n        return pages.filter(function (page) {\n          return page.title.includes(query);\n        });\n      }\n\n      return pages;\n    },\n    handleScroll: function handleScroll(event) {\n      if (window.scrollY > 115) {\n        this.top = 15;\n      } else {\n        for (var i = Math.min(this.top, window.scrollY); i <= Math.max(this.top, window.scrollY); i++) {\n          this.top = Math.abs(115 - window.scrollY);\n        }\n      }\n    },\n    changeFontSize: function changeFontSize(size) {\n      var sizes = ['x-large', 'larger', 'large', 'inherit', 'smaller', 'small', 'x-small'];\n      var currentIndex = sizes.indexOf(this.fontSize);\n      if (size == 'up') {\n        if (currentIndex - 1 >= 0) {\n          this.fontSize = sizes[currentIndex - 1];\n        }\n      } else {\n        // down\n        if (currentIndex + 1 < sizes.length) {\n          this.fontSize = sizes[currentIndex + 1];\n        }\n      }\n    },\n    handleResize: function handleResize() {\n      this.width = document.querySelector('.sidebar-wrapper').clientWidth - 30 + 'px';\n    },\n    toggleMenu: function toggleMenu() {\n      this.menu = !this.menu;\n    },\n    makeItems: function makeItems() {\n      this.items = [{\n        text: 'خانه',\n        href: '#'\n      }, {\n        text: this.book.collaborators[0].name,\n        href: '/@' + this.$router.currentRoute.params.username\n      }, {\n        text: this.book.title,\n        href: '/@' + this.$router.currentRoute.params.username + '/' + this.$router.currentRoute.params.slug\n      }, {\n        text: this.title,\n        active: true\n      }];\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcmVzb3VyY2VzL2pzL3BhZ2VzL2Jvb2tzL2luZGV4LnZ1ZT9hZTlmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3TkFEQTs7QUFHQSxTQUhBLHFCQUdBO0FBQ0E7QUFDQSxHQUxBO0FBT0EsV0FQQSx1QkFPQTtBQUNBO0FBQ0EsR0FUQTs7O0FBV0E7QUFDQTtBQUNBLEdBYkE7O0FBZUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUhBO0FBSUEsR0FwQkE7O0FBc0JBO0FBQ0E7QUFDQSxHQXhCQTs7QUEwQkEsTUExQkEsa0JBMEJBO0FBQ0E7QUFDQSxzQ0FEQTtBQUVBLGdCQUZBO0FBR0Esa0JBSEE7QUFJQSxpQkFKQTtBQUtBLGVBTEE7QUFNQSxjQU5BO0FBT0EseUJBUEE7QUFRQSxpQkFSQTtBQVNBLGNBVEE7QUFVQSx1QkFWQTtBQVdBLGlCQVhBO0FBWUE7QUFaQTtBQWNBLEdBekNBOzs7QUEyQ0E7QUFDQTtBQUNBLGlGQURBO0FBZ0JBLGVBaEJBLHVCQWdCQTtBQUNBO0FBQ0E7QUFEQTtBQUdBLE9BcEJBO0FBcUJBLFlBckJBLGtCQXFCQSxHQXJCQSxFQXFCQTtBQUNBO0FBQ0E7QUF2QkE7QUFEQSxHQTNDQTs7QUF1RUE7QUFDQSxjQURBLHNCQUNBLEtBREEsRUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQVBBO0FBU0EsZ0JBVEEsd0JBU0EsS0FUQSxFQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUZBO0FBR0E7O0FBRUE7QUFDQSxLQWxCQTtBQW9CQSxnQkFwQkEsd0JBb0JBLEtBcEJBLEVBb0JBO0FBQ0E7QUFDQTtBQUNBLE9BRkEsTUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0E1QkE7QUE4QkEsa0JBOUJBLDBCQThCQSxJQTlCQSxFQThCQTtBQUNBLG1CQUNBLFNBREEsRUFFQSxRQUZBLEVBR0EsT0FIQSxFQUlBLFNBSkEsRUFLQSxTQUxBLEVBTUEsT0FOQSxFQU9BLFNBUEE7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FKQSxNQUlBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBbERBO0FBb0RBLGdCQXBEQSwwQkFvREE7QUFDQTtBQUNBLEtBdERBO0FBd0RBLGNBeERBLHdCQXdEQTtBQUNBO0FBQ0EsS0ExREE7QUE0REEsYUE1REEsdUJBNERBO0FBQ0E7QUFDQSxvQkFEQTtBQUVBO0FBRkEsU0FHQTtBQUNBLDZDQURBO0FBRUE7QUFGQSxPQUhBLEVBTUE7QUFDQSw2QkFEQTtBQUVBO0FBRkEsT0FOQSxFQVNBO0FBQ0Esd0JBREE7QUFFQTtBQUZBLE9BVEE7QUFhQTtBQTFFQTtBQXZFQSIsImZpbGUiOiI0MjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XG4gIDxiLXJvdyB2LWlmPVwiYm9va1wiPlxuICAgIDxiLWNvbCBjb2xzPVwiMTJcIj5cbiAgICAgIDxiLWJyZWFkY3J1bWIgOml0ZW1zPVwiaXRlbXNcIiAvPlxuICAgIDwvYi1jb2w+XG4gICAgPGItY29sIGNvbHM9XCIxMlwiXG4gICAgICAgICAgIHNtPVwiMTJcIlxuICAgICAgICAgICBtZD1cIjRcIiBjbGFzcz1cInNpZGViYXItd3JhcHBlciBkLW1kLWJsb2NrXCIgOmNsYXNzPVwieyAnZC1ibG9jayBkLXNtLWJsb2NrJzogbWVudSwgJ2Qtbm9uZSBkLXNtLW5vbmUnOiAhIG1lbnUgfVwiPlxuICAgICAgPGRpdiBjbGFzcz1cInNpZGViYXItbmF2XCIgOnN0eWxlPVwiJ21heC13aWR0aDogJyArIHdpZHRoXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbG9hdC1sZWZ0IGQtYmxvY2sgZC1zbS1ibG9jayBkLW1kLW5vbmVcIiBzdHlsZT1cIndpZHRoOiBjYWxjKDEwMCUgLSA0NnB4KTtcIj48Yi1mb3JtLWlucHV0IHYtbW9kZWw9XCJ0aXRsZVwiIHR5cGU9XCJzZWFyY2hcIiBjbGFzcz1cIm1iLTNcIiA6cGxhY2Vob2xkZXI9XCIkdCgnc2VhcmNoX3RpdGxlJylcIj48L2ItZm9ybS1pbnB1dD48L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImQtbm9uZSBkLXNtLW5vbmUgZC1tZC1ibG9ja1wiPjxiLWZvcm0taW5wdXQgdi1tb2RlbD1cInRpdGxlXCIgdHlwZT1cInNlYXJjaFwiIGNsYXNzPVwibWItM1wiIDpwbGFjZWhvbGRlcj1cIiR0KCdzZWFyY2hfdGl0bGUnKVwiPjwvYi1mb3JtLWlucHV0PjwvZGl2PlxuICAgICAgICA8c3BhbiBjbGFzcz1cImQtaW5saW5lIGQtc20taW5saW5lIGQtbWQtbm9uZVwiIEBjbGljaz1cInRvZ2dsZU1lbnUoKVwiPjxiLWJ1dHRvbiBzdHlsZT1cIm1hcmdpbjogNXB4IDBweCAxOXB4IDBweDtcIiB2YXJpYW50PVwibGlua1wiPjxmYSBpY29uPVwidGltZXMtY2lyY2xlXCIgZml4ZWQtd2lkdGggLz48L2ItYnV0dG9uPjwvc3Bhbj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImJvb2stY29udGVudHNcIiA6c3R5bGU9XCInaGVpZ2h0OiAnICsgaGVpZ2h0XCI+XG4gICAgICAgICAgPGItbGlzdC1ncm91cD5cbiAgICAgICAgICAgIDxEeW5hbWljU2Nyb2xsZXJcbiAgICAgICAgICAgICAgY2xhc3M9XCJzY3JvbGxlclwiXG4gICAgICAgICAgICAgIDppdGVtcz1cImJvb2tDb250ZW50cyhib29rLnBhZ2VzKVwiXG4gICAgICAgICAgICAgIDptaW4taXRlbS1oZWlnaHQ9XCI0OFwiXG4gICAgICAgICAgICAgIHBhZ2UtbW9kZVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT1cInsgaXRlbSwgaW5kZXgsIGFjdGl2ZSB9XCI+XG4gICAgICAgICAgICAgICAgPER5bmFtaWNTY3JvbGxlckl0ZW1cbiAgICAgICAgICAgICAgICAgIDppdGVtPVwiaXRlbVwiXG4gICAgICAgICAgICAgICAgICA6YWN0aXZlPVwiYWN0aXZlXCJcbiAgICAgICAgICAgICAgICAgIDpzaXplLWRlcGVuZGVuY2llcz1cIltcbiAgICAgICAgICAgICAgICAgICAgaXRlbS50aXRsZSxcbiAgICAgICAgICAgICAgICAgIF1cIlxuICAgICAgICAgICAgICAgICAgOmRhdGEtaW5kZXg9XCJpbmRleFwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPGItbGlzdC1ncm91cC1pdGVtIGNsYXNzPVwidGV4dC1sZWZ0XCJcbiAgICAgICAgICAgICAgICAgICAgdi1pZj1cIml0ZW0uaXNfaGVhZGVyXCJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgYm9yZGVyOiBub25lO1wiPlxuICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPnt7IGl0ZW0udGl0bGUgfX08L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgIDwvYi1saXN0LWdyb3VwLWl0ZW0+XG4gICAgICAgICAgICAgICAgICA8Yi1saXN0LWdyb3VwLWl0ZW1cbiAgICAgICAgICAgICAgICAgICAgdi1lbHNlXG4gICAgICAgICAgICAgICAgICAgIDp0bz1cInsgbmFtZTogJ2Jvb2tzLnJlYWQnLCBwYXJhbXM6IHsgc2x1Zzogc2x1ZywgcGFnZTogaXRlbS5pZCB9fVwiXG4gICAgICAgICAgICAgICAgICAgIEBjbGljaz1cInRvZ2dsZU1lbnUoKVwiPlxuICAgICAgICAgICAgICAgICAgICB7eyBpdGVtLnRpdGxlIH19XG4gICAgICAgICAgICAgICAgICA8L2ItbGlzdC1ncm91cC1pdGVtPlxuICAgICAgICAgICAgICAgIDwvRHluYW1pY1Njcm9sbGVySXRlbT5cbiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvRHluYW1pY1Njcm9sbGVyPlxuICAgICAgICAgIDwvYi1saXN0LWdyb3VwPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvYi1jb2w+XG5cbiAgICA8Yi1jb2wgY29scz1cIjEyXCJcbiAgICAgICAgICAgc209XCIxMlwiXG4gICAgICAgICAgIG1kPVwiOFwiPlxuICAgICAgPGRpdiBjbGFzcz1cInJlYWRlci1jb250YWluZXIgZC1tZC1ibG9ja1wiIDpjbGFzcz1cInsgJ2Qtbm9uZSBkLXNtLW5vbmUnOiBtZW51LCAnZC1ibG9jayBkLXNtLWJsb2NrJzogISBtZW51IH1cIj5cbiAgICAgICAgPGItY2FyZCBjbGFzcz1cIm1iLTIgcmVhZGluZy1oZWxwXCI+XG4gICAgICAgICAgPGItYnV0dG9uIHNpemU9XCJzbVwiIHZhcmlhbnQ9XCJsaW5rXCIgQGNsaWNrPVwiY2hhbmdlRm9udFNpemUoJ3VwJylcIj48ZmEgaWNvbj1cImZvbnRcIiBmaXhlZC13aWR0aCAvPjxmYSBpY29uPVwic29ydC11cFwiIGZpeGVkLXdpZHRoIC8+PC9iLWJ1dHRvbj5cbiAgICAgICAgICA8Yi1idXR0b24gc2l6ZT1cInNtXCIgdmFyaWFudD1cImxpbmtcIiBAY2xpY2s9XCJjaGFuZ2VGb250U2l6ZSgnZG93bicpXCI+PHNtYWxsPjxmYSBpY29uPVwiZm9udFwiIGZpeGVkLXdpZHRoIC8+PC9zbWFsbD48ZmEgaWNvbj1cInNvcnQtZG93blwiIGZpeGVkLXdpZHRoIC8+PC9iLWJ1dHRvbj5cbiAgICAgICAgICA8Yi1idXR0b24gY2xhc3M9XCJkLWlubGluZSBkLXNtLWlubGluZSBkLW1kLW5vbmVcIiBzaXplPVwic21cIiB2YXJpYW50PVwibGlua1wiIEBjbGljaz1cInRvZ2dsZU1lbnUoKVwiPjxmYSBpY29uPVwiYmFyc1wiIGZpeGVkLXdpZHRoIC8+IHt7ICR0KCdjb250ZW50cycpIH19PC9iLWJ1dHRvbj5cbiAgICAgICAgPC9iLWNhcmQ+XG4gICAgICAgIDx0cmFuc2l0aW9uIG5hbWU9XCJmYWRlXCJcbiAgICAgICAgICAgICAgICAgICAgbW9kZT1cIm91dC1pblwiPlxuICAgICAgICAgIDxkaXYgOnN0eWxlPVwiJ2ZvbnQtc2l6ZTogJyArIGZvbnRTaXplXCI+XG4gICAgICAgICAgICA8cm91dGVyLXZpZXcgOmtleT1cIiRyb3V0ZS5mdWxsUGF0aFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgOmZpcnN0SWQ9XCJnZXRGaXJzdElkKGJvb2sucGFnZXMpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICA6c2x1Zz1cInNsdWdcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3RyYW5zaXRpb24+XG4gICAgICA8L2Rpdj5cbiAgICA8L2ItY29sPlxuICA8L2Itcm93PlxuICA8ZGl2IHYtZWxzZSBjbGFzcz1cIm15LTQgdGV4dC1jZW50ZXJcIj48aW1nIDpzcmM9XCInL3N2Zy1sb2FkZXJzL292YWwuc3ZnJ1wiIC8+PC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZydcbmltcG9ydCAndnVlLXZpcnR1YWwtc2Nyb2xsZXIvZGlzdC92dWUtdmlydHVhbC1zY3JvbGxlci5jc3MnXG5pbXBvcnQgeyBEeW5hbWljU2Nyb2xsZXIsIER5bmFtaWNTY3JvbGxlckl0ZW0gfSBmcm9tICd2dWUtdmlydHVhbC1zY3JvbGxlcidcblxuZXhwb3J0IGRlZmF1bHQge1xuICBjb21wb25lbnRzOiB7IER5bmFtaWNTY3JvbGxlciwgRHluYW1pY1Njcm9sbGVySXRlbSB9LFxuXG4gIGNyZWF0ZWQgKCkge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbClcbiAgfSxcblxuICBkZXN0cm95ZWQgKCkge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbClcbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuaGFuZGxlUmVzaXplKVxuICB9LFxuXG4gIHVwZGF0ZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICB0aGlzLndpZHRoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNpZGViYXItd3JhcHBlcicpLmNsaWVudFdpZHRoIC0gMzAgKyAncHgnXG4gICAgICBjb25zb2xlLmxvZyh0aGlzLnRpdGxlKVxuICAgIH0pXG4gIH0sXG5cbiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gKCkge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLmhhbmRsZVJlc2l6ZSlcbiAgfSxcblxuICBkYXRhICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2x1ZzogdGhpcy4kcm91dGUucGFyYW1zWydzbHVnJ10sXG4gICAgICBib29rOiBudWxsLFxuICAgICAgaGVpZ2h0OiBudWxsLFxuICAgICAgd2lkdGg6IG51bGwsXG4gICAgICB0aXRsZTogJycsXG4gICAgICB0b3A6IDExNSxcbiAgICAgIGZvbnRTaXplOiAnaW5oZXJpdCcsXG4gICAgICBtZW51OiBmYWxzZSxcbiAgICAgIGluZGV4OiAwLFxuICAgICAgcGF0aDogdGhpcy4kcm91dGUsXG4gICAgICBzaG93OiBmYWxzZSxcbiAgICAgIGl0ZW1zOiBbXVxuICAgIH1cbiAgfSxcblxuICBhcG9sbG86IHtcbiAgICBib29rOiB7XG4gICAgICBxdWVyeTogZ3FsYHF1ZXJ5IEJvb2soJHNsdWc6IFN0cmluZykge1xuICAgICAgICBib29rKHNsdWc6ICRzbHVnKSB7XG4gICAgICAgICAgaWRcbiAgICAgICAgICB0aXRsZVxuICAgICAgICAgIHBhZ2VzIHtcbiAgICAgICAgICAgIGlkXG4gICAgICAgICAgICB0aXRsZVxuICAgICAgICAgICAgaXNfaGVhZGVyXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbGxhYm9yYXRvcnMge1xuICAgICAgICAgICAgbmFtZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgYCxcbiAgICAgIHZhcmlhYmxlcyAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc2x1ZzogdGhpcy5zbHVnLFxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcmVzdWx0IChyZXMpIHtcbiAgICAgICAgdGhpcy5tYWtlSXRlbXMoKVxuICAgICAgfVxuICAgIH0sXG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGdldEZpcnN0SWQgKHBhZ2VzKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZ2VzLmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICBpZiAoISBwYWdlc1tpXS5pc19oZWFkZXIpIHtcbiAgICAgICAgICByZXR1cm4gcGFnZXNbaV0uaWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBib29rQ29udGVudHMgKHBhZ2VzKSB7XG4gICAgICBpZiAodGhpcy50aXRsZSkge1xuICAgICAgICBsZXQgcXVlcnkgPSB0aGlzLnRpdGxlXG4gICAgICAgIHJldHVybiBwYWdlcy5maWx0ZXIoZnVuY3Rpb24gKHBhZ2UpIHtcbiAgICAgICAgICByZXR1cm4gcGFnZS50aXRsZS5pbmNsdWRlcyhxdWVyeSlcbiAgICAgICAgfSlcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHBhZ2VzXG4gICAgfSxcblxuICAgIGhhbmRsZVNjcm9sbCAoZXZlbnQpIHtcbiAgICAgIGlmICh3aW5kb3cuc2Nyb2xsWSA+IDExNSkge1xuICAgICAgICB0aGlzLnRvcCA9IDE1XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3IgKHZhciBpID0gTWF0aC5taW4odGhpcy50b3AsIHdpbmRvdy5zY3JvbGxZKTsgaSA8PSBNYXRoLm1heCh0aGlzLnRvcCwgd2luZG93LnNjcm9sbFkpOyBpKyspIHtcbiAgICAgICAgICB0aGlzLnRvcCA9IE1hdGguYWJzKDExNSAtIHdpbmRvdy5zY3JvbGxZKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGNoYW5nZUZvbnRTaXplIChzaXplKSB7XG4gICAgICBsZXQgc2l6ZXMgPSBbXG4gICAgICAgICd4LWxhcmdlJyxcbiAgICAgICAgJ2xhcmdlcicsXG4gICAgICAgICdsYXJnZScsXG4gICAgICAgICdpbmhlcml0JyxcbiAgICAgICAgJ3NtYWxsZXInLFxuICAgICAgICAnc21hbGwnLFxuICAgICAgICAneC1zbWFsbCdcbiAgICAgIF07XG4gICAgICBsZXQgY3VycmVudEluZGV4ID0gc2l6ZXMuaW5kZXhPZih0aGlzLmZvbnRTaXplKVxuICAgICAgaWYgKHNpemUgPT0gJ3VwJykge1xuICAgICAgICBpZiAoY3VycmVudEluZGV4IC0gMSA+PSAwKSB7XG4gICAgICAgICAgdGhpcy5mb250U2l6ZSA9IHNpemVzW2N1cnJlbnRJbmRleCAtIDFdXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7IC8vIGRvd25cbiAgICAgICAgaWYgKGN1cnJlbnRJbmRleCArIDEgPCBzaXplcy5sZW5ndGgpIHtcbiAgICAgICAgICB0aGlzLmZvbnRTaXplID0gc2l6ZXNbY3VycmVudEluZGV4ICsgMV1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBoYW5kbGVSZXNpemUgKCkge1xuICAgICAgdGhpcy53aWR0aCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyLXdyYXBwZXInKS5jbGllbnRXaWR0aCAtIDMwICsgJ3B4J1xuICAgIH0sXG5cbiAgICB0b2dnbGVNZW51ICgpIHtcbiAgICAgIHRoaXMubWVudSA9ICEgdGhpcy5tZW51XG4gICAgfSxcblxuICAgIG1ha2VJdGVtcyAoKSB7XG4gICAgICB0aGlzLml0ZW1zID0gW3tcbiAgICAgICAgdGV4dDogJ9iu2KfZhtmHJyxcbiAgICAgICAgaHJlZjogJyMnXG4gICAgICB9LCB7XG4gICAgICAgIHRleHQ6IHRoaXMuYm9vay5jb2xsYWJvcmF0b3JzWzBdLm5hbWUsXG4gICAgICAgIGhyZWY6IGAvQCR7dGhpcy4kcm91dGVyLmN1cnJlbnRSb3V0ZS5wYXJhbXMudXNlcm5hbWV9YFxuICAgICAgfSwge1xuICAgICAgICB0ZXh0OiB0aGlzLmJvb2sudGl0bGUsXG4gICAgICAgIGhyZWY6IGAvQCR7dGhpcy4kcm91dGVyLmN1cnJlbnRSb3V0ZS5wYXJhbXMudXNlcm5hbWV9LyR7dGhpcy4kcm91dGVyLmN1cnJlbnRSb3V0ZS5wYXJhbXMuc2x1Z31gXG4gICAgICB9LCB7XG4gICAgICAgIHRleHQ6IHRoaXMudGl0bGUsXG4gICAgICAgIGFjdGl2ZTogdHJ1ZVxuICAgICAgfV1cbiAgICB9XG4gIH0sXG59XG48L3NjcmlwdD5cblxuPHN0eWxlIHNjb3BlZD5cbi5ib29rLWNvbnRlbnRzIHtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAyMDBweClcbn1cbi5ib29rLWNvbnRlbnRzOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIHdpZHRoOiAwLjNyZW07XG59XG4uYm9vay1jb250ZW50czo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTJhMmEyO1xufVxuLnNpZGViYXItbmF2IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogMTAwJTtcbn1cbi5yZWFkaW5nLWhlbHAgLmNhcmQtYm9keSB7XG4gIHBhZGRpbmc6IDAuMzkycmVtIDAuOTM3NXJlbSAhaW1wb3J0YW50O1xufVxuPC9zdHlsZT5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyByZXNvdXJjZXMvanMvcGFnZXMvYm9va3MvaW5kZXgudnVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///426\n");

/***/ }),

/***/ 445:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(446);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(37)(\"6eb01993\", content, false, {});\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c73f4858\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c73f4858\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvYm9va3MvaW5kZXgudnVlP2M5MTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQSxjQUFjLG1CQUFPLENBQUMsR0FBaVM7QUFDdlQsNENBQTRDLFFBQVM7QUFDckQ7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxFQUFtRSxnQ0FBZ0M7QUFDeEg7QUFDQSxHQUFHLEtBQVU7QUFDYjtBQUNBO0FBQ0EsZ0pBQWdKLGlGQUFpRjtBQUNqTyx5SkFBeUosaUZBQWlGO0FBQzFPO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiNDQ1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcCEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LWM3M2Y0ODU4XFxcIixcXFwic2NvcGVkXFxcIjp0cnVlLFxcXCJoYXNJbmxpbmVDb25maWdcXFwiOnRydWV9IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vaW5kZXgudnVlXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikoXCI2ZWIwMTk5M1wiLCBjb250ZW50LCBmYWxzZSwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuIC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG4gaWYoIWNvbnRlbnQubG9jYWxzKSB7XG4gICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleC5qcz97XFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtYzczZjQ4NThcXFwiLFxcXCJzY29wZWRcXFwiOnRydWUsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6dHJ1ZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9pbmRleC52dWVcIiwgZnVuY3Rpb24oKSB7XG4gICAgIHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleC5qcz97XFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtYzczZjQ4NThcXFwiLFxcXCJzY29wZWRcXFwiOnRydWUsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6dHJ1ZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9pbmRleC52dWVcIik7XG4gICAgIGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuICAgICB1cGRhdGUobmV3Q29udGVudCk7XG4gICB9KTtcbiB9XG4gLy8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIhLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj9zb3VyY2VNYXAhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtYzczZjQ4NThcIixcInNjb3BlZFwiOnRydWUsXCJoYXNJbmxpbmVDb25maWdcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vcmVzb3VyY2VzL2pzL3BhZ2VzL2Jvb2tzL2luZGV4LnZ1ZVxuLy8gbW9kdWxlIGlkID0gNDQ1XG4vLyBtb2R1bGUgY2h1bmtzID0gMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///445\n");

/***/ }),

/***/ 446:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(17)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.book-contents[data-v-c73f4858] {\\n  overflow-y: scroll;\\n  height: calc(100vh - 200px)\\n}\\n.book-contents[data-v-c73f4858]::-webkit-scrollbar {\\n  width: 0.3rem;\\n}\\n.book-contents[data-v-c73f4858]::-webkit-scrollbar-thumb {\\n  background-color: #a2a2a2;\\n}\\n.sidebar-nav[data-v-c73f4858] {\\n  position: fixed;\\n  width: 100%;\\n}\\n.reading-help .card-body[data-v-c73f4858] {\\n  padding: 0.392rem 0.9375rem !important;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"/Users/amirmasoud/Sites/negarin/resources/js/pages/books/resources/js/pages/books/index.vue\"],\"names\":[],\"mappings\":\";AAmOA;EACA,mBAAA;EACA,2BAAA;CACA;AACA;EACA,cAAA;CACA;AACA;EACA,0BAAA;CACA;AACA;EACA,gBAAA;EACA,YAAA;CACA;AACA;EACA,uCAAA;CACA\",\"file\":\"index.vue\",\"sourcesContent\":[\"<template>\\n  <b-row v-if=\\\"book\\\">\\n    <b-col cols=\\\"12\\\">\\n      <b-breadcrumb :items=\\\"items\\\" />\\n    </b-col>\\n    <b-col cols=\\\"12\\\"\\n           sm=\\\"12\\\"\\n           md=\\\"4\\\" class=\\\"sidebar-wrapper d-md-block\\\" :class=\\\"{ 'd-block d-sm-block': menu, 'd-none d-sm-none': ! menu }\\\">\\n      <div class=\\\"sidebar-nav\\\" :style=\\\"'max-width: ' + width\\\">\\n        <div class=\\\"float-left d-block d-sm-block d-md-none\\\" style=\\\"width: calc(100% - 46px);\\\"><b-form-input v-model=\\\"title\\\" type=\\\"search\\\" class=\\\"mb-3\\\" :placeholder=\\\"$t('search_title')\\\"></b-form-input></div>\\n        <div class=\\\"d-none d-sm-none d-md-block\\\"><b-form-input v-model=\\\"title\\\" type=\\\"search\\\" class=\\\"mb-3\\\" :placeholder=\\\"$t('search_title')\\\"></b-form-input></div>\\n        <span class=\\\"d-inline d-sm-inline d-md-none\\\" @click=\\\"toggleMenu()\\\"><b-button style=\\\"margin: 5px 0px 19px 0px;\\\" variant=\\\"link\\\"><fa icon=\\\"times-circle\\\" fixed-width /></b-button></span>\\n        <div class=\\\"book-contents\\\" :style=\\\"'height: ' + height\\\">\\n          <b-list-group>\\n            <DynamicScroller\\n              class=\\\"scroller\\\"\\n              :items=\\\"bookContents(book.pages)\\\"\\n              :min-item-height=\\\"48\\\"\\n              page-mode\\n            >\\n              <template slot-scope=\\\"{ item, index, active }\\\">\\n                <DynamicScrollerItem\\n                  :item=\\\"item\\\"\\n                  :active=\\\"active\\\"\\n                  :size-dependencies=\\\"[\\n                    item.title,\\n                  ]\\\"\\n                  :data-index=\\\"index\\\"\\n                >\\n                  <b-list-group-item class=\\\"text-left\\\"\\n                    v-if=\\\"item.is_header\\\"\\n                    style=\\\"background-color: transparent; border: none;\\\">\\n                    <strong>{{ item.title }}</strong>\\n                  </b-list-group-item>\\n                  <b-list-group-item\\n                    v-else\\n                    :to=\\\"{ name: 'books.read', params: { slug: slug, page: item.id }}\\\"\\n                    @click=\\\"toggleMenu()\\\">\\n                    {{ item.title }}\\n                  </b-list-group-item>\\n                </DynamicScrollerItem>\\n              </template>\\n            </DynamicScroller>\\n          </b-list-group>\\n        </div>\\n      </div>\\n    </b-col>\\n\\n    <b-col cols=\\\"12\\\"\\n           sm=\\\"12\\\"\\n           md=\\\"8\\\">\\n      <div class=\\\"reader-container d-md-block\\\" :class=\\\"{ 'd-none d-sm-none': menu, 'd-block d-sm-block': ! menu }\\\">\\n        <b-card class=\\\"mb-2 reading-help\\\">\\n          <b-button size=\\\"sm\\\" variant=\\\"link\\\" @click=\\\"changeFontSize('up')\\\"><fa icon=\\\"font\\\" fixed-width /><fa icon=\\\"sort-up\\\" fixed-width /></b-button>\\n          <b-button size=\\\"sm\\\" variant=\\\"link\\\" @click=\\\"changeFontSize('down')\\\"><small><fa icon=\\\"font\\\" fixed-width /></small><fa icon=\\\"sort-down\\\" fixed-width /></b-button>\\n          <b-button class=\\\"d-inline d-sm-inline d-md-none\\\" size=\\\"sm\\\" variant=\\\"link\\\" @click=\\\"toggleMenu()\\\"><fa icon=\\\"bars\\\" fixed-width /> {{ $t('contents') }}</b-button>\\n        </b-card>\\n        <transition name=\\\"fade\\\"\\n                    mode=\\\"out-in\\\">\\n          <div :style=\\\"'font-size: ' + fontSize\\\">\\n            <router-view :key=\\\"$route.fullPath\\\"\\n                         :firstId=\\\"getFirstId(book.pages)\\\"\\n                         :slug=\\\"slug\\\" />\\n          </div>\\n        </transition>\\n      </div>\\n    </b-col>\\n  </b-row>\\n  <div v-else class=\\\"my-4 text-center\\\"><img :src=\\\"'/svg-loaders/oval.svg'\\\" /></div>\\n</template>\\n\\n<script>\\nimport gql from 'graphql-tag'\\nimport 'vue-virtual-scroller/dist/vue-virtual-scroller.css'\\nimport { DynamicScroller, DynamicScrollerItem } from 'vue-virtual-scroller'\\n\\nexport default {\\n  components: { DynamicScroller, DynamicScrollerItem },\\n\\n  created () {\\n    window.addEventListener('scroll', this.handleScroll)\\n  },\\n\\n  destroyed () {\\n    window.removeEventListener('scroll', this.handleScroll)\\n  },\\n\\n  mounted: function () {\\n    window.addEventListener('resize', this.handleResize)\\n  },\\n\\n  updated: function () {\\n    this.$nextTick(function () {\\n      this.width = document.querySelector('.sidebar-wrapper').clientWidth - 30 + 'px'\\n      console.log(this.title)\\n    })\\n  },\\n\\n  beforeDestroy: function () {\\n    window.removeEventListener('resize', this.handleResize)\\n  },\\n\\n  data () {\\n    return {\\n      slug: this.$route.params['slug'],\\n      book: null,\\n      height: null,\\n      width: null,\\n      title: '',\\n      top: 115,\\n      fontSize: 'inherit',\\n      menu: false,\\n      index: 0,\\n      path: this.$route,\\n      show: false,\\n      items: []\\n    }\\n  },\\n\\n  apollo: {\\n    book: {\\n      query: gql`query Book($slug: String) {\\n        book(slug: $slug) {\\n          id\\n          title\\n          pages {\\n            id\\n            title\\n            is_header\\n          }\\n          collaborators {\\n            name\\n          }\\n        }\\n      }\\n      `,\\n      variables () {\\n        return {\\n          slug: this.slug,\\n        }\\n      },\\n      result (res) {\\n        this.makeItems()\\n      }\\n    },\\n  },\\n\\n  methods: {\\n    getFirstId (pages) {\\n      for (let i = 0; i < pages.length - 1; i++) {\\n        if (! pages[i].is_header) {\\n          return pages[i].id\\n        }\\n      }\\n    },\\n\\n    bookContents (pages) {\\n      if (this.title) {\\n        let query = this.title\\n        return pages.filter(function (page) {\\n          return page.title.includes(query)\\n        })\\n      }\\n\\n      return pages\\n    },\\n\\n    handleScroll (event) {\\n      if (window.scrollY > 115) {\\n        this.top = 15\\n      } else {\\n        for (var i = Math.min(this.top, window.scrollY); i <= Math.max(this.top, window.scrollY); i++) {\\n          this.top = Math.abs(115 - window.scrollY)\\n        }\\n      }\\n    },\\n\\n    changeFontSize (size) {\\n      let sizes = [\\n        'x-large',\\n        'larger',\\n        'large',\\n        'inherit',\\n        'smaller',\\n        'small',\\n        'x-small'\\n      ];\\n      let currentIndex = sizes.indexOf(this.fontSize)\\n      if (size == 'up') {\\n        if (currentIndex - 1 >= 0) {\\n          this.fontSize = sizes[currentIndex - 1]\\n        }\\n      } else { // down\\n        if (currentIndex + 1 < sizes.length) {\\n          this.fontSize = sizes[currentIndex + 1]\\n        }\\n      }\\n    },\\n\\n    handleResize () {\\n      this.width = document.querySelector('.sidebar-wrapper').clientWidth - 30 + 'px'\\n    },\\n\\n    toggleMenu () {\\n      this.menu = ! this.menu\\n    },\\n\\n    makeItems () {\\n      this.items = [{\\n        text: 'خانه',\\n        href: '#'\\n      }, {\\n        text: this.book.collaborators[0].name,\\n        href: `/@${this.$router.currentRoute.params.username}`\\n      }, {\\n        text: this.book.title,\\n        href: `/@${this.$router.currentRoute.params.username}/${this.$router.currentRoute.params.slug}`\\n      }, {\\n        text: this.title,\\n        active: true\\n      }]\\n    }\\n  },\\n}\\n</script>\\n\\n<style scoped>\\n.book-contents {\\n  overflow-y: scroll;\\n  height: calc(100vh - 200px)\\n}\\n.book-contents::-webkit-scrollbar {\\n  width: 0.3rem;\\n}\\n.book-contents::-webkit-scrollbar-thumb {\\n  background-color: #a2a2a2;\\n}\\n.sidebar-nav {\\n  position: fixed;\\n  width: 100%;\\n}\\n.reading-help .card-body {\\n  padding: 0.392rem 0.9375rem !important;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///446\n");

/***/ }),

/***/ 447:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(448);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(28)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./vue-virtual-scroller.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./vue-virtual-scroller.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLXZpcnR1YWwtc2Nyb2xsZXIvZGlzdC92dWUtdmlydHVhbC1zY3JvbGxlci5jc3M/ZmI1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxHQUF3RDtBQUM5RSw0Q0FBNEMsUUFBUztBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxFQUFzQztBQUMzRDtBQUNBO0FBQ0EsR0FBRyxLQUFVO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwiZmlsZSI6IjQ0Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzIS4vdnVlLXZpcnR1YWwtc2Nyb2xsZXIuY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi92dWUtdmlydHVhbC1zY3JvbGxlci5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi92dWUtdmlydHVhbC1zY3JvbGxlci5jc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS12aXJ0dWFsLXNjcm9sbGVyL2Rpc3QvdnVlLXZpcnR1YWwtc2Nyb2xsZXIuY3NzXG4vLyBtb2R1bGUgaWQgPSA0NDdcbi8vIG1vZHVsZSBjaHVua3MgPSAyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///447\n");

/***/ }),

/***/ 448:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(17)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".virtual-scroller[data-v-727d6836]:not(.page-mode){overflow-y:auto}.item-container[data-v-727d6836]{box-sizing:border-box;width:100%;overflow:hidden}.items[data-v-727d6836]{width:100%}.recycle-list[data-v-68940351]:not(.page-mode){overflow-y:auto}.item-wrapper[data-v-68940351]{box-sizing:border-box;width:100%;overflow:hidden;position:relative}.item-view[data-v-68940351]{width:100%;position:absolute;top:0;left:0;will-change:transform}\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdnVlLXZpcnR1YWwtc2Nyb2xsZXIvZGlzdC92dWUtdmlydHVhbC1zY3JvbGxlci5jc3M/NTQ3ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyxFQUFrQztBQUNyRTs7O0FBR0E7QUFDQSxjQUFjLFFBQVMsc0RBQXNELGdCQUFnQixpQ0FBaUMsc0JBQXNCLFdBQVcsZ0JBQWdCLHdCQUF3QixXQUFXLCtDQUErQyxnQkFBZ0IsK0JBQStCLHNCQUFzQixXQUFXLGdCQUFnQixrQkFBa0IsNEJBQTRCLFdBQVcsa0JBQWtCLE1BQU0sT0FBTyxzQkFBc0I7O0FBRS9jIiwiZmlsZSI6IjQ0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudmlydHVhbC1zY3JvbGxlcltkYXRhLXYtNzI3ZDY4MzZdOm5vdCgucGFnZS1tb2RlKXtvdmVyZmxvdy15OmF1dG99Lml0ZW0tY29udGFpbmVyW2RhdGEtdi03MjdkNjgzNl17Ym94LXNpemluZzpib3JkZXItYm94O3dpZHRoOjEwMCU7b3ZlcmZsb3c6aGlkZGVufS5pdGVtc1tkYXRhLXYtNzI3ZDY4MzZde3dpZHRoOjEwMCV9LnJlY3ljbGUtbGlzdFtkYXRhLXYtNjg5NDAzNTFdOm5vdCgucGFnZS1tb2RlKXtvdmVyZmxvdy15OmF1dG99Lml0ZW0td3JhcHBlcltkYXRhLXYtNjg5NDAzNTFde2JveC1zaXppbmc6Ym9yZGVyLWJveDt3aWR0aDoxMDAlO292ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjpyZWxhdGl2ZX0uaXRlbS12aWV3W2RhdGEtdi02ODk0MDM1MV17d2lkdGg6MTAwJTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7d2lsbC1jaGFuZ2U6dHJhbnNmb3JtfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIhLi9ub2RlX21vZHVsZXMvdnVlLXZpcnR1YWwtc2Nyb2xsZXIvZGlzdC92dWUtdmlydHVhbC1zY3JvbGxlci5jc3Ncbi8vIG1vZHVsZSBpZCA9IDQ0OFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///448\n");

/***/ }),

/***/ 449:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export RecycleScroller */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DynamicScroller; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DynamicScrollerItem; });\n/* unused harmony export IdState */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n\n\nvar config = {\n  itemsLimit: 1000\n};\n\nfunction getInternetExplorerVersion() {\n\tvar ua = window.navigator.userAgent;\n\n\tvar msie = ua.indexOf('MSIE ');\n\tif (msie > 0) {\n\t\t// IE 10 or older => return version number\n\t\treturn parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t}\n\n\tvar trident = ua.indexOf('Trident/');\n\tif (trident > 0) {\n\t\t// IE 11 => return version number\n\t\tvar rv = ua.indexOf('rv:');\n\t\treturn parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t}\n\n\tvar edge = ua.indexOf('Edge/');\n\tif (edge > 0) {\n\t\t// Edge (IE 12+) => return version number\n\t\treturn parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t}\n\n\t// other browser\n\treturn -1;\n}\n\nvar isIE = void 0;\n\nfunction initCompat() {\n\tif (!initCompat.init) {\n\t\tinitCompat.init = true;\n\t\tisIE = getInternetExplorerVersion() !== -1;\n\t}\n}\n\nvar ResizeObserver = { render: function render() {\n\t\tvar _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"resize-observer\", attrs: { \"tabindex\": \"-1\" } });\n\t}, staticRenderFns: [], _scopeId: 'data-v-b329ee4c',\n\tname: 'resize-observer',\n\n\tmethods: {\n\t\tnotify: function notify() {\n\t\t\tthis.$emit('notify');\n\t\t},\n\t\taddResizeHandlers: function addResizeHandlers() {\n\t\t\tthis._resizeObject.contentDocument.defaultView.addEventListener('resize', this.notify);\n\t\t\tif (this._w !== this.$el.offsetWidth || this._h !== this.$el.offsetHeight) {\n\t\t\t\tthis.notify();\n\t\t\t}\n\t\t},\n\t\tremoveResizeHandlers: function removeResizeHandlers() {\n\t\t\tif (this._resizeObject && this._resizeObject.onload) {\n\t\t\t\tif (!isIE && this._resizeObject.contentDocument) {\n\t\t\t\t\tthis._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.notify);\n\t\t\t\t}\n\t\t\t\tdelete this._resizeObject.onload;\n\t\t\t}\n\t\t}\n\t},\n\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tinitCompat();\n\t\tthis.$nextTick(function () {\n\t\t\t_this._w = _this.$el.offsetWidth;\n\t\t\t_this._h = _this.$el.offsetHeight;\n\t\t});\n\t\tvar object = document.createElement('object');\n\t\tthis._resizeObject = object;\n\t\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\t\tobject.setAttribute('aria-hidden', 'true');\n\t\tobject.setAttribute('tabindex', -1);\n\t\tobject.onload = this.addResizeHandlers;\n\t\tobject.type = 'text/html';\n\t\tif (isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t\tobject.data = 'about:blank';\n\t\tif (!isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t},\n\tbeforeDestroy: function beforeDestroy() {\n\t\tthis.removeResizeHandlers();\n\t}\n};\n\n// Install the components\nfunction install(Vue$$1) {\n\tVue$$1.component('resize-observer', ResizeObserver);\n\t/* -- Add more components here -- */\n}\n\n/* -- Plugin definition & Auto-install -- */\n/* You shouldn't have to modify the code below */\n\n// Plugin\nvar plugin = {\n\t// eslint-disable-next-line no-undef\n\tversion: \"0.4.4\",\n\tinstall: install\n};\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n\tGlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n\tGlobalVue = global.Vue;\n}\nif (GlobalVue) {\n\tGlobalVue.use(plugin);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nfunction processOptions(value) {\n\tvar options = void 0;\n\tif (typeof value === 'function') {\n\t\t// Simple options (callback-only)\n\t\toptions = {\n\t\t\tcallback: value\n\t\t};\n\t} else {\n\t\t// Options object\n\t\toptions = value;\n\t}\n\treturn options;\n}\n\nfunction throttle(callback, delay) {\n\tvar timeout = void 0;\n\tvar lastState = void 0;\n\tvar currentArgs = void 0;\n\tvar throttled = function throttled(state) {\n\t\tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\targs[_key - 1] = arguments[_key];\n\t\t}\n\n\t\tcurrentArgs = args;\n\t\tif (timeout && state === lastState) return;\n\t\tlastState = state;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(function () {\n\t\t\tcallback.apply(undefined, [state].concat(toConsumableArray(currentArgs)));\n\t\t\ttimeout = 0;\n\t\t}, delay);\n\t};\n\tthrottled._clear = function () {\n\t\tclearTimeout(timeout);\n\t};\n\treturn throttled;\n}\n\nfunction deepEqual(val1, val2) {\n\tif (val1 === val2) return true;\n\tif ((typeof val1 === 'undefined' ? 'undefined' : _typeof(val1)) === 'object') {\n\t\tfor (var key in val1) {\n\t\t\tif (!deepEqual(val1[key], val2[key])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nvar VisibilityState = function () {\n\tfunction VisibilityState(el, options, vnode) {\n\t\tclassCallCheck(this, VisibilityState);\n\n\t\tthis.el = el;\n\t\tthis.observer = null;\n\t\tthis.frozen = false;\n\t\tthis.createObserver(options, vnode);\n\t}\n\n\tcreateClass(VisibilityState, [{\n\t\tkey: 'createObserver',\n\t\tvalue: function createObserver(options, vnode) {\n\t\t\tvar _this = this;\n\n\t\t\tif (this.observer) {\n\t\t\t\tthis.destroyObserver();\n\t\t\t}\n\n\t\t\tif (this.frozen) return;\n\n\t\t\tthis.options = processOptions(options);\n\n\t\t\tthis.callback = this.options.callback;\n\t\t\t// Throttle\n\t\t\tif (this.callback && this.options.throttle) {\n\t\t\t\tthis.callback = throttle(this.callback, this.options.throttle);\n\t\t\t}\n\n\t\t\tthis.oldResult = undefined;\n\n\t\t\tthis.observer = new IntersectionObserver(function (entries) {\n\t\t\t\tvar entry = entries[0];\n\t\t\t\tif (_this.callback) {\n\t\t\t\t\t// Use isIntersecting if possible because browsers can report isIntersecting as true, but intersectionRatio as 0, when something very slowly enters the viewport.\n\t\t\t\t\tvar result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;\n\t\t\t\t\tif (result === _this.oldResult) return;\n\t\t\t\t\t_this.oldResult = result;\n\t\t\t\t\t_this.callback(result, entry);\n\t\t\t\t\tif (result && _this.options.once) {\n\t\t\t\t\t\t_this.frozen = true;\n\t\t\t\t\t\t_this.destroyObserver();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this.options.intersection);\n\n\t\t\t// Wait for the element to be in document\n\t\t\tvnode.context.$nextTick(function () {\n\t\t\t\t_this.observer.observe(_this.el);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'destroyObserver',\n\t\tvalue: function destroyObserver() {\n\t\t\tif (this.observer) {\n\t\t\t\tthis.observer.disconnect();\n\t\t\t\tthis.observer = null;\n\t\t\t}\n\n\t\t\t// Cancel throttled call\n\t\t\tif (this.callback && this.callback._clear) {\n\t\t\t\tthis.callback._clear();\n\t\t\t\tthis.callback = null;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'threshold',\n\t\tget: function get$$1() {\n\t\t\treturn this.options.intersection && this.options.intersection.threshold || 0;\n\t\t}\n\t}]);\n\treturn VisibilityState;\n}();\n\nfunction bind(el, _ref, vnode) {\n\tvar value = _ref.value;\n\n\tif (typeof IntersectionObserver === 'undefined') {\n\t\tconsole.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill');\n\t} else {\n\t\tvar state = new VisibilityState(el, value, vnode);\n\t\tel._vue_visibilityState = state;\n\t}\n}\n\nfunction update(el, _ref2, vnode) {\n\tvar value = _ref2.value,\n\t    oldValue = _ref2.oldValue;\n\n\tif (deepEqual(value, oldValue)) return;\n\tvar state = el._vue_visibilityState;\n\tif (state) {\n\t\tstate.createObserver(value, vnode);\n\t} else {\n\t\tbind(el, { value: value }, vnode);\n\t}\n}\n\nfunction unbind(el) {\n\tvar state = el._vue_visibilityState;\n\tif (state) {\n\t\tstate.destroyObserver();\n\t\tdelete el._vue_visibilityState;\n\t}\n}\n\nvar ObserveVisibility = {\n\tbind: bind,\n\tupdate: update,\n\tunbind: unbind\n};\n\n// Install the components\nfunction install$1(Vue$$1) {\n\tVue$$1.directive('observe-visibility', ObserveVisibility);\n\t/* -- Add more components here -- */\n}\n\n/* -- Plugin definition & Auto-install -- */\n/* You shouldn't have to modify the code below */\n\n// Plugin\nvar plugin$1 = {\n\t// eslint-disable-next-line no-undef\n\tversion: \"0.4.3\",\n\tinstall: install$1\n};\n\n// Auto-install\nvar GlobalVue$1 = null;\nif (typeof window !== 'undefined') {\n\tGlobalVue$1 = window.Vue;\n} else if (typeof global !== 'undefined') {\n\tGlobalVue$1 = global.Vue;\n}\nif (GlobalVue$1) {\n\tGlobalVue$1.use(plugin$1);\n}\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar scrollparent = createCommonjsModule(function (module) {\n(function (root, factory) {\n  if (false) {\n    undefined([], factory);\n  } else if (module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n}(commonjsGlobal, function () {\n  var regex = /(auto|scroll)/;\n\n  var parents = function (node, ps) {\n    if (node.parentNode === null) { return ps; }\n\n    return parents(node.parentNode, ps.concat([node]));\n  };\n\n  var style = function (node, prop) {\n    return getComputedStyle(node, null).getPropertyValue(prop);\n  };\n\n  var overflow = function (node) {\n    return style(node, \"overflow\") + style(node, \"overflow-y\") + style(node, \"overflow-x\");\n  };\n\n  var scroll = function (node) {\n   return regex.test(overflow(node));\n  };\n\n  var scrollParent = function (node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return ;\n    }\n\n    var ps = parents(node.parentNode, []);\n\n    for (var i = 0; i < ps.length; i += 1) {\n      if (scroll(ps[i])) {\n        return ps[i];\n      }\n    }\n\n    return document.scrollingElement || document.documentElement;\n  };\n\n  return scrollParent;\n}));\n});\n\nvar supportsPassive = false;\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false;\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supportsPassive = true;\n      }\n    });\n    window.addEventListener('test', null, opts);\n  } catch (e) {}\n}\n\n// @vue/component\nvar Scroller = {\n  components: {\n    ResizeObserver: ResizeObserver\n  },\n\n  directives: {\n    ObserveVisibility: ObserveVisibility\n  },\n\n  props: {\n    items: {\n      type: Array,\n      required: true\n    },\n\n    itemHeight: {\n      type: Number,\n      default: null\n    },\n\n    minItemHeight: {\n      type: [Number, String],\n      default: null\n    },\n\n    heightField: {\n      type: String,\n      default: 'height'\n    },\n\n    typeField: {\n      type: String,\n      default: 'type'\n    },\n\n    keyField: {\n      type: String,\n      default: 'id'\n    },\n\n    buffer: {\n      type: Number,\n      default: 200\n    },\n\n    pageMode: {\n      type: Boolean,\n      default: false\n    },\n\n    prerender: {\n      type: Number,\n      default: 0\n    },\n\n    emitUpdate: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  computed: {\n    heights: function heights() {\n      if (this.itemHeight === null) {\n        var heights = {\n          '-1': { accumulator: 0 }\n        };\n        var items = this.items;\n        var field = this.heightField;\n        var minItemHeight = this.minItemHeight;\n        var accumulator = 0;\n        var current = void 0;\n        for (var i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemHeight;\n          accumulator += current;\n          heights[i] = { accumulator: accumulator, height: current };\n        }\n        return heights;\n      }\n    }\n  },\n\n  beforeDestroy: function beforeDestroy() {\n    this.removeListeners();\n  },\n\n\n  methods: {\n    getListenerTarget: function getListenerTarget() {\n      var target = scrollparent(this.$el);\n      // Fix global scroll target for Chrome and Safari\n      if (target === window.document.documentElement || target === window.document.body) {\n        target = window;\n      }\n      return target;\n    },\n    getScroll: function getScroll() {\n      var el = this.$el;\n      // const wrapper = this.$refs.wrapper\n      var scrollState = void 0;\n\n      if (this.pageMode) {\n        var size = el.getBoundingClientRect();\n        var top = -size.top;\n        var height = window.innerHeight;\n        if (top < 0) {\n          height += top;\n          top = 0;\n        }\n        if (top + height > size.height) {\n          height = size.height - top;\n        }\n        scrollState = {\n          top: top,\n          bottom: top + height\n        };\n      } else {\n        scrollState = {\n          top: el.scrollTop,\n          bottom: el.scrollTop + el.clientHeight\n        };\n      }\n\n      return scrollState;\n    },\n    applyPageMode: function applyPageMode() {\n      if (this.pageMode) {\n        this.addListeners();\n      } else {\n        this.removeListeners();\n      }\n    },\n    addListeners: function addListeners() {\n      this.listenerTarget = this.getListenerTarget();\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive ? {\n        passive: true\n      } : false);\n      this.listenerTarget.addEventListener('resize', this.handleResize);\n    },\n    removeListeners: function removeListeners() {\n      if (!this.listenerTarget) {\n        return;\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll);\n      this.listenerTarget.removeEventListener('resize', this.handleResize);\n\n      this.listenerTarget = null;\n    },\n    scrollToItem: function scrollToItem(index) {\n      var scrollTop = void 0;\n      if (this.itemHeight === null) {\n        scrollTop = index > 0 ? this.heights[index - 1].accumulator : 0;\n      } else {\n        scrollTop = index * this.itemHeight;\n      }\n      this.scrollToPosition(scrollTop);\n    },\n    scrollToPosition: function scrollToPosition(position) {\n      this.$el.scrollTop = position;\n    },\n    itemsLimitError: function itemsLimitError() {\n      var _this = this;\n\n      setTimeout(function () {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', _this.$el);\n        console.log('Make sure the scroller has a fixed height and \\'overflow-y\\' set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.');\n      });\n      throw new Error('Rendered items limit reached');\n    }\n  }\n};\n\n//\n\nvar uid = 0;\n\nvar script = {\n  name: 'RecycleScroller',\n\n  mixins: [Scroller],\n\n  data: function data() {\n    return {\n      pool: [],\n      totalHeight: 0,\n      ready: false,\n      hoverKey: null\n    };\n  },\n\n\n  watch: {\n    items: function items() {\n      this.updateVisibleItems(true);\n    },\n    pageMode: function pageMode() {\n      this.applyPageMode();\n      this.updateVisibleItems(false);\n    },\n\n\n    heights: {\n      handler: function handler() {\n        this.updateVisibleItems(false);\n      },\n\n      deep: true\n    }\n  },\n\n  created: function created() {\n    this.$_startIndex = 0;\n    this.$_endIndex = 0;\n    this.$_views = new Map();\n    this.$_unusedViews = new Map();\n    this.$_scrollDirty = false;\n\n    if (this.$isServer) {\n      this.updateVisibleItems(false);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.applyPageMode();\n    this.$nextTick(function () {\n      _this.updateVisibleItems(true);\n      _this.ready = true;\n    });\n  },\n\n\n  methods: {\n    addView: function addView(pool, index, item, key, type) {\n      var view = {\n        item: item,\n        top: 0\n      };\n      var nonReactive = {\n        id: uid++,\n        index: index,\n        used: true,\n        key: key,\n        type: type\n      };\n      Object.defineProperty(view, 'nr', {\n        configurable: false,\n        value: nonReactive\n      });\n      pool.push(view);\n      return view;\n    },\n    unuseView: function unuseView(view) {\n      var fake = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var unusedViews = this.$_unusedViews;\n      var type = view.nr.type;\n      var unusedPool = unusedViews.get(type);\n      if (!unusedPool) {\n        unusedPool = [];\n        unusedViews.set(type, unusedPool);\n      }\n      unusedPool.push(view);\n      if (!fake) {\n        view.nr.used = false;\n        view.top = -9999;\n        this.$_views.delete(view.nr.key);\n      }\n    },\n    handleResize: function handleResize() {\n      this.$emit('resize');\n      if (this.ready) this.updateVisibleItems(false);\n    },\n    handleScroll: function handleScroll(event) {\n      var _this2 = this;\n\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true;\n        requestAnimationFrame(function () {\n          _this2.$_scrollDirty = false;\n\n          var _updateVisibleItems = _this2.updateVisibleItems(false),\n              continuous = _updateVisibleItems.continuous;\n\n          // It seems sometimes chrome doesn't fire scroll event :/\n          // When non continous scrolling is ending, we force a refresh\n\n\n          if (!continuous) {\n            clearTimeout(_this2.$_refreshTimout);\n            _this2.$_refreshTimout = setTimeout(_this2.handleScroll, 100);\n          }\n        });\n      }\n    },\n    handleVisibilityChange: function handleVisibilityChange(isVisible, entry) {\n      var _this3 = this;\n\n      if (this.ready) {\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\n          this.$emit('visible');\n          requestAnimationFrame(function () {\n            _this3.updateVisibleItems(false);\n          });\n        } else {\n          this.$emit('hidden');\n        }\n      }\n    },\n    updateVisibleItems: function updateVisibleItems(checkItem) {\n      var itemHeight = this.itemHeight;\n      var typeField = this.typeField;\n      var keyField = this.keyField;\n      var items = this.items;\n      var count = items.length;\n      var heights = this.heights;\n      var views = this.$_views;\n      var unusedViews = this.$_unusedViews;\n      var pool = this.pool;\n      var startIndex = void 0,\n          endIndex = void 0;\n      var totalHeight = void 0;\n\n      if (!count) {\n        startIndex = endIndex = totalHeight = 0;\n      } else if (this.$isServer) {\n        startIndex = 0;\n        endIndex = this.prerender;\n        totalHeight = null;\n      } else {\n        var scroll = this.getScroll();\n        var buffer = this.buffer;\n        scroll.top -= buffer;\n        scroll.bottom += buffer;\n\n        // Variable height mode\n        if (itemHeight === null) {\n          var h = void 0;\n          var a = 0;\n          var b = count - 1;\n          var i = ~~(count / 2);\n          var oldI = void 0;\n\n          // Searching for startIndex\n          do {\n            oldI = i;\n            h = heights[i].accumulator;\n            if (h < scroll.top) {\n              a = i;\n            } else if (i < count - 1 && heights[i + 1].accumulator > scroll.top) {\n              b = i;\n            }\n            i = ~~((a + b) / 2);\n          } while (i !== oldI);\n          i < 0 && (i = 0);\n          startIndex = i;\n\n          // For container style\n          totalHeight = heights[count - 1].accumulator;\n\n          // Searching for endIndex\n          for (endIndex = i; endIndex < count && heights[endIndex].accumulator < scroll.bottom; endIndex++) {}\n          if (endIndex === -1) {\n            endIndex = items.length - 1;\n          } else {\n            endIndex++;\n            // Bounds\n            endIndex > count && (endIndex = count);\n          }\n        } else {\n          // Fixed height mode\n          startIndex = ~~(scroll.top / itemHeight);\n          endIndex = Math.ceil(scroll.bottom / itemHeight);\n\n          // Bounds\n          startIndex < 0 && (startIndex = 0);\n          endIndex > count && (endIndex = count);\n\n          totalHeight = count * itemHeight;\n        }\n      }\n\n      if (endIndex - startIndex > config.itemsLimit) {\n        this.itemsLimitError();\n      }\n\n      this.totalHeight = totalHeight;\n\n      var view = void 0;\n\n      var continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex;\n      var unusedIndex = void 0;\n\n      if (this.$_continuous !== continuous) {\n        if (continuous) {\n          views.clear();\n          unusedViews.clear();\n          for (var _i = 0, l = pool.length; _i < l; _i++) {\n            view = pool[_i];\n            this.unuseView(view);\n          }\n        }\n        this.$_continuous = continuous;\n      } else if (continuous) {\n        for (var _i2 = 0, _l = pool.length; _i2 < _l; _i2++) {\n          view = pool[_i2];\n          if (view.nr.used) {\n            // Update view item index\n            if (checkItem) {\n              view.nr.index = items.findIndex(function (item) {\n                return keyField ? item[keyField] === view.item[keyField] : item === view.item;\n              });\n            }\n\n            // Check if index is still in visible range\n            if (view.nr.index === -1 || view.nr.index < startIndex || view.nr.index >= endIndex) {\n              this.unuseView(view);\n            }\n          }\n        }\n      }\n\n      if (!continuous) {\n        unusedIndex = new Map();\n      }\n\n      var item = void 0,\n          type = void 0,\n          unusedPool = void 0;\n      var v = void 0;\n      for (var _i3 = startIndex; _i3 < endIndex; _i3++) {\n        item = items[_i3];\n        var key = keyField ? item[keyField] : item;\n        view = views.get(key);\n\n        if (!itemHeight && !heights[_i3].height) {\n          if (view) this.unuseView(view);\n          continue;\n        }\n\n        // No view assigned to item\n        if (!view) {\n          type = item[typeField];\n\n          if (continuous) {\n            unusedPool = unusedViews.get(type);\n            // Reuse existing view\n            if (unusedPool && unusedPool.length) {\n              view = unusedPool.pop();\n              view.item = item;\n              view.nr.used = true;\n              view.nr.index = _i3;\n              view.nr.key = key;\n              view.nr.type = type;\n            } else {\n              view = this.addView(pool, _i3, item, key, type);\n            }\n          } else {\n            unusedPool = unusedViews.get(type);\n            v = unusedIndex.get(type) || 0;\n            // Use existing view\n            // We don't care if they are already used\n            // because we are not in continous scrolling\n            if (unusedPool && v < unusedPool.length) {\n              view = unusedPool[v];\n              view.item = item;\n              view.nr.used = true;\n              view.nr.index = _i3;\n              view.nr.key = key;\n              view.nr.type = type;\n              unusedIndex.set(type, v + 1);\n            } else {\n              view = this.addView(pool, _i3, item, key, type);\n              this.unuseView(view, true);\n            }\n            v++;\n          }\n          views.set(key, view);\n        } else {\n          view.nr.used = true;\n        }\n\n        // Update position\n        if (itemHeight === null) {\n          view.top = heights[_i3 - 1].accumulator;\n        } else {\n          view.top = _i3 * itemHeight;\n        }\n      }\n\n      this.$_startIndex = startIndex;\n      this.$_endIndex = endIndex;\n\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex);\n\n      return {\n        continuous: continuous\n      };\n    }\n  }\n};\n\n/* script */\nvar __vue_script__ = script;\n\n/* template */\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\", {\n    directives: [{\n      name: \"observe-visibility\",\n      rawName: \"v-observe-visibility\",\n      value: _vm.handleVisibilityChange,\n      expression: \"handleVisibilityChange\"\n    }],\n    staticClass: \"vue-recycle-scroller\",\n    class: {\n      ready: _vm.ready,\n      \"page-mode\": _vm.pageMode\n    },\n    on: {\n      \"&scroll\": function scroll($event) {\n        return _vm.handleScroll($event);\n      }\n    }\n  }, [_vm._t(\"before-container\"), _vm._v(\" \"), _c(\"div\", {\n    ref: \"wrapper\",\n    staticClass: \"vue-recycle-scroller__item-wrapper\",\n    style: { height: _vm.totalHeight + \"px\" }\n  }, _vm._l(_vm.pool, function (view) {\n    return _c(\"div\", {\n      key: view.nr.id,\n      staticClass: \"vue-recycle-scroller__item-view\",\n      class: { hover: _vm.hoverKey === view.nr.key },\n      style: _vm.ready ? { transform: \"translateY(\" + view.top + \"px)\" } : null,\n      on: {\n        mouseenter: function mouseenter($event) {\n          _vm.hoverKey = view.nr.key;\n        },\n        mouseleave: function mouseleave($event) {\n          _vm.hoverKey = null;\n        }\n      }\n    }, [_vm._t(\"default\", null, {\n      item: view.item,\n      index: view.nr.index,\n      active: view.nr.used\n    })], 2);\n  })), _vm._v(\" \"), _vm._t(\"after-container\"), _vm._v(\" \"), _c(\"resize-observer\", { on: { notify: _vm.handleResize } })], 2);\n};\nvar __vue_staticRenderFns__ = [];\n__vue_render__._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__ = function __vue_inject_styles__(inject) {\n  if (!inject) return;\n  inject(\"data-v-211f9c10_0\", { source: \"\\n.vue-recycle-scroller:not(.page-mode) {\\n  overflow-y: auto;\\n}\\n.vue-recycle-scroller__item-wrapper {\\n  box-sizing: border-box;\\n  width: 100%;\\n  overflow: hidden;\\n  position: relative;\\n}\\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\\n  width: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  will-change: transform;\\n}\\n\", map: { \"version\": 3, \"sources\": [\"/home/akryum/Projects/vue-virtual-scroller/src/components/RecycleScroller.vue\"], \"names\": [], \"mappings\": \";AAoXA;EACA,iBAAA;CACA;AAEA;EACA,uBAAA;EACA,YAAA;EACA,iBAAA;EACA,mBAAA;CACA;AAEA;EACA,YAAA;EACA,mBAAA;EACA,OAAA;EACA,QAAA;EACA,uBAAA;CACA\", \"file\": \"RecycleScroller.vue\", \"sourcesContent\": [\"<template>\\n  <div\\n    v-observe-visibility=\\\"handleVisibilityChange\\\"\\n    class=\\\"vue-recycle-scroller\\\"\\n    :class=\\\"{\\n      ready,\\n      'page-mode': pageMode,\\n    }\\\"\\n    @scroll.passive=\\\"handleScroll\\\"\\n  >\\n    <slot\\n      name=\\\"before-container\\\"\\n    />\\n\\n    <div\\n      ref=\\\"wrapper\\\"\\n      :style=\\\"{ height: totalHeight + 'px' }\\\"\\n      class=\\\"vue-recycle-scroller__item-wrapper\\\"\\n    >\\n      <div\\n        v-for=\\\"view of pool\\\"\\n        :key=\\\"view.nr.id\\\"\\n        :style=\\\"ready ? { transform: 'translateY(' + view.top + 'px)' } : null\\\"\\n        class=\\\"vue-recycle-scroller__item-view\\\"\\n        :class=\\\"{ hover: hoverKey === view.nr.key }\\\"\\n        @mouseenter=\\\"hoverKey = view.nr.key\\\"\\n        @mouseleave=\\\"hoverKey = null\\\"\\n      >\\n        <slot\\n          :item=\\\"view.item\\\"\\n          :index=\\\"view.nr.index\\\"\\n          :active=\\\"view.nr.used\\\"\\n        />\\n      </div>\\n    </div>\\n\\n    <slot\\n      name=\\\"after-container\\\"\\n    />\\n\\n    <resize-observer @notify=\\\"handleResize\\\" />\\n  </div>\\n</template>\\n\\n<script>\\nimport Scroller from '../mixins/Scroller'\\nimport config from '../config'\\n\\nlet uid = 0\\n\\nexport default {\\n  name: 'RecycleScroller',\\n\\n  mixins: [\\n    Scroller,\\n  ],\\n\\n  data () {\\n    return {\\n      pool: [],\\n      totalHeight: 0,\\n      ready: false,\\n      hoverKey: null,\\n    }\\n  },\\n\\n  watch: {\\n    items () {\\n      this.updateVisibleItems(true)\\n    },\\n\\n    pageMode () {\\n      this.applyPageMode()\\n      this.updateVisibleItems(false)\\n    },\\n\\n    heights: {\\n      handler () {\\n        this.updateVisibleItems(false)\\n      },\\n      deep: true,\\n    },\\n  },\\n\\n  created () {\\n    this.$_startIndex = 0\\n    this.$_endIndex = 0\\n    this.$_views = new Map()\\n    this.$_unusedViews = new Map()\\n    this.$_scrollDirty = false\\n\\n    if (this.$isServer) {\\n      this.updateVisibleItems(false)\\n    }\\n  },\\n\\n  mounted () {\\n    this.applyPageMode()\\n    this.$nextTick(() => {\\n      this.updateVisibleItems(true)\\n      this.ready = true\\n    })\\n  },\\n\\n  methods: {\\n    addView (pool, index, item, key, type) {\\n      const view = {\\n        item,\\n        top: 0,\\n      }\\n      const nonReactive = {\\n        id: uid++,\\n        index,\\n        used: true,\\n        key,\\n        type,\\n      }\\n      Object.defineProperty(view, 'nr', {\\n        configurable: false,\\n        value: nonReactive,\\n      })\\n      pool.push(view)\\n      return view\\n    },\\n\\n    unuseView (view, fake = false) {\\n      const unusedViews = this.$_unusedViews\\n      const type = view.nr.type\\n      let unusedPool = unusedViews.get(type)\\n      if (!unusedPool) {\\n        unusedPool = []\\n        unusedViews.set(type, unusedPool)\\n      }\\n      unusedPool.push(view)\\n      if (!fake) {\\n        view.nr.used = false\\n        view.top = -9999\\n        this.$_views.delete(view.nr.key)\\n      }\\n    },\\n\\n    handleResize () {\\n      this.$emit('resize')\\n      if (this.ready) this.updateVisibleItems(false)\\n    },\\n\\n    handleScroll (event) {\\n      if (!this.$_scrollDirty) {\\n        this.$_scrollDirty = true\\n        requestAnimationFrame(() => {\\n          this.$_scrollDirty = false\\n          const { continuous } = this.updateVisibleItems(false)\\n\\n          // It seems sometimes chrome doesn't fire scroll event :/\\n          // When non continous scrolling is ending, we force a refresh\\n          if (!continuous) {\\n            clearTimeout(this.$_refreshTimout)\\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\\n          }\\n        })\\n      }\\n    },\\n\\n    handleVisibilityChange (isVisible, entry) {\\n      if (this.ready) {\\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\\n          this.$emit('visible')\\n          requestAnimationFrame(() => {\\n            this.updateVisibleItems(false)\\n          })\\n        } else {\\n          this.$emit('hidden')\\n        }\\n      }\\n    },\\n\\n    updateVisibleItems (checkItem) {\\n      const itemHeight = this.itemHeight\\n      const typeField = this.typeField\\n      const keyField = this.keyField\\n      const items = this.items\\n      const count = items.length\\n      const heights = this.heights\\n      const views = this.$_views\\n      let unusedViews = this.$_unusedViews\\n      const pool = this.pool\\n      let startIndex, endIndex\\n      let totalHeight\\n\\n      if (!count) {\\n        startIndex = endIndex = totalHeight = 0\\n      } else if (this.$isServer) {\\n        startIndex = 0\\n        endIndex = this.prerender\\n        totalHeight = null\\n      } else {\\n        const scroll = this.getScroll()\\n        const buffer = this.buffer\\n        scroll.top -= buffer\\n        scroll.bottom += buffer\\n\\n        // Variable height mode\\n        if (itemHeight === null) {\\n          let h\\n          let a = 0\\n          let b = count - 1\\n          let i = ~~(count / 2)\\n          let oldI\\n\\n          // Searching for startIndex\\n          do {\\n            oldI = i\\n            h = heights[i].accumulator\\n            if (h < scroll.top) {\\n              a = i\\n            } else if (i < count - 1 && heights[i + 1].accumulator > scroll.top) {\\n              b = i\\n            }\\n            i = ~~((a + b) / 2)\\n          } while (i !== oldI)\\n          i < 0 && (i = 0)\\n          startIndex = i\\n\\n          // For container style\\n          totalHeight = heights[count - 1].accumulator\\n\\n          // Searching for endIndex\\n          for (endIndex = i; endIndex < count && heights[endIndex].accumulator < scroll.bottom; endIndex++);\\n          if (endIndex === -1) {\\n            endIndex = items.length - 1\\n          } else {\\n            endIndex++\\n            // Bounds\\n            endIndex > count && (endIndex = count)\\n          }\\n        } else {\\n          // Fixed height mode\\n          startIndex = ~~(scroll.top / itemHeight)\\n          endIndex = Math.ceil(scroll.bottom / itemHeight)\\n\\n          // Bounds\\n          startIndex < 0 && (startIndex = 0)\\n          endIndex > count && (endIndex = count)\\n\\n          totalHeight = count * itemHeight\\n        }\\n      }\\n\\n      if (endIndex - startIndex > config.itemsLimit) {\\n        this.itemsLimitError()\\n      }\\n\\n      this.totalHeight = totalHeight\\n\\n      let view\\n\\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\\n      let unusedIndex\\n\\n      if (this.$_continuous !== continuous) {\\n        if (continuous) {\\n          views.clear()\\n          unusedViews.clear()\\n          for (let i = 0, l = pool.length; i < l; i++) {\\n            view = pool[i]\\n            this.unuseView(view)\\n          }\\n        }\\n        this.$_continuous = continuous\\n      } else if (continuous) {\\n        for (let i = 0, l = pool.length; i < l; i++) {\\n          view = pool[i]\\n          if (view.nr.used) {\\n            // Update view item index\\n            if (checkItem) {\\n              view.nr.index = items.findIndex(\\n                item => keyField ? item[keyField] === view.item[keyField] : item === view.item\\n              )\\n            }\\n\\n            // Check if index is still in visible range\\n            if (\\n              view.nr.index === -1 ||\\n              view.nr.index < startIndex ||\\n              view.nr.index >= endIndex\\n            ) {\\n              this.unuseView(view)\\n            }\\n          }\\n        }\\n      }\\n\\n      if (!continuous) {\\n        unusedIndex = new Map()\\n      }\\n\\n      let item, type, unusedPool\\n      let v\\n      for (let i = startIndex; i < endIndex; i++) {\\n        item = items[i]\\n        const key = keyField ? item[keyField] : item\\n        view = views.get(key)\\n\\n        if (!itemHeight && !heights[i].height) {\\n          if (view) this.unuseView(view)\\n          continue\\n        }\\n\\n        // No view assigned to item\\n        if (!view) {\\n          type = item[typeField]\\n\\n          if (continuous) {\\n            unusedPool = unusedViews.get(type)\\n            // Reuse existing view\\n            if (unusedPool && unusedPool.length) {\\n              view = unusedPool.pop()\\n              view.item = item\\n              view.nr.used = true\\n              view.nr.index = i\\n              view.nr.key = key\\n              view.nr.type = type\\n            } else {\\n              view = this.addView(pool, i, item, key, type)\\n            }\\n          } else {\\n            unusedPool = unusedViews.get(type)\\n            v = unusedIndex.get(type) || 0\\n            // Use existing view\\n            // We don't care if they are already used\\n            // because we are not in continous scrolling\\n            if (unusedPool && v < unusedPool.length) {\\n              view = unusedPool[v]\\n              view.item = item\\n              view.nr.used = true\\n              view.nr.index = i\\n              view.nr.key = key\\n              view.nr.type = type\\n              unusedIndex.set(type, v + 1)\\n            } else {\\n              view = this.addView(pool, i, item, key, type)\\n              this.unuseView(view, true)\\n            }\\n            v++\\n          }\\n          views.set(key, view)\\n        } else {\\n          view.nr.used = true\\n        }\\n\\n        // Update position\\n        if (itemHeight === null) {\\n          view.top = heights[i - 1].accumulator\\n        } else {\\n          view.top = i * itemHeight\\n        }\\n      }\\n\\n      this.$_startIndex = startIndex\\n      this.$_endIndex = endIndex\\n\\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex)\\n\\n      return {\\n        continuous,\\n      }\\n    },\\n  },\\n}\\n</script>\\n\\n<style>\\n.vue-recycle-scroller:not(.page-mode) {\\n  overflow-y: auto;\\n}\\n\\n.vue-recycle-scroller__item-wrapper {\\n  box-sizing: border-box;\\n  width: 100%;\\n  overflow: hidden;\\n  position: relative;\\n}\\n\\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\\n  width: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  will-change: transform;\\n}\\n</style>\\n\"] }, media: undefined });\n};\n/* scoped */\nvar __vue_scope_id__ = undefined;\n/* module identifier */\nvar __vue_module_identifier__ = undefined;\n/* functional template */\nvar __vue_is_functional_template__ = false;\n/* component normalizer */\nfunction __vue_normalize__(template, style, script$$1, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script$$1 === 'function' ? script$$1.options : script$$1) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"/home/akryum/Projects/vue-virtual-scroller/src/components/RecycleScroller.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  {\n    var hook = void 0;\n    if (style) {\n      hook = function hook(context) {\n        style.call(this, createInjector(context));\n      };\n    }\n\n    if (hook !== undefined) {\n      if (component.functional) {\n        // register for functional component in vue file\n        var originalRender = component.render;\n        component.render = function renderWithStyleInjection(h, context) {\n          hook.call(context);\n          return originalRender(h, context);\n        };\n      } else {\n        // inject component registration as beforeCreate hook\n        var existing = component.beforeCreate;\n        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n      }\n    }\n  }\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar RecycleScroller = __vue_normalize__({ render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ }, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, __vue_create_injector__, undefined);\n\n//\n\nvar script$1 = {\n  name: 'DynamicScroller',\n\n  components: {\n    RecycleScroller: RecycleScroller\n  },\n\n  inheritAttrs: false,\n\n  provide: function provide() {\n    return {\n      vscrollData: this.vscrollData,\n      vscrollBus: this\n    };\n  },\n\n\n  props: {\n    items: {\n      type: Array,\n      required: true\n    },\n\n    minItemHeight: {\n      type: [Number, String],\n      required: true\n    },\n\n    keyField: {\n      type: String,\n      default: 'id'\n    }\n  },\n\n  data: function data() {\n    return {\n      vscrollData: {\n        active: true,\n        heights: {},\n        keyField: this.keyField\n      }\n    };\n  },\n\n\n  computed: {\n    itemsWithHeight: function itemsWithHeight() {\n      var result = [];\n      var items = this.items;\n      var keyField = this.keyField;\n      var heights = this.vscrollData.heights;\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var id = item[keyField];\n        result.push({\n          item: item,\n          id: id,\n          height: heights[id] || 0\n        });\n      }\n      return result;\n    },\n    listeners: function listeners() {\n      var listeners = {};\n      for (var key in this.$listeners) {\n        if (key !== 'resize' && key !== 'visible') {\n          listeners[key] = this.$listeners[key];\n        }\n      }\n      return listeners;\n    }\n  },\n\n  watch: {\n    items: 'forceUpdate'\n  },\n\n  created: function created() {\n    this.$_updates = [];\n  },\n  mounted: function mounted() {\n    var scroller = this.$refs.scroller;\n    var rect = this.getSize(scroller);\n    this._scrollerWidth = rect.width;\n  },\n  activated: function activated() {\n    this.vscrollData.active = true;\n  },\n  deactivated: function deactivated() {\n    this.vscrollData.active = false;\n  },\n\n\n  methods: {\n    onScrollerResize: function onScrollerResize() {\n      var scroller = this.$refs.scroller;\n      if (scroller) {\n        this.forceUpdate();\n      }\n      this.$emit('resize');\n    },\n    onScrollerVisible: function onScrollerVisible() {\n      this.$emit('vscroll:update', { force: false });\n      this.$emit('visible');\n    },\n    forceUpdate: function forceUpdate() {\n      this.vscrollData.heights = {};\n      this.$emit('vscroll:update', { force: true });\n    },\n    getSize: function getSize(scroller) {\n      return scroller.$el.getBoundingClientRect();\n    },\n    scrollToItem: function scrollToItem(index) {\n      var scroller = this.$refs.scroller;\n      if (scroller) scroller.scrollToItem(index);\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$1 = script$1;\n\n/* template */\nvar __vue_render__$1 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"RecycleScroller\", _vm._g(_vm._b({\n    ref: \"scroller\",\n    attrs: {\n      items: _vm.itemsWithHeight,\n      \"min-item-height\": _vm.minItemHeight\n    },\n    on: { resize: _vm.onScrollerResize, visible: _vm.onScrollerVisible },\n    scopedSlots: _vm._u([{\n      key: \"default\",\n      fn: function fn(ref) {\n        var itemWithHeight = ref.item;\n        var index = ref.index;\n        var active = ref.active;\n        return [_vm._t(\"default\", null, null, {\n          item: itemWithHeight.item,\n          index: index,\n          active: active,\n          itemWithHeight: itemWithHeight\n        })];\n      }\n    }])\n  }, \"RecycleScroller\", _vm.$attrs, false), _vm.listeners), [_c(\"template\", { slot: \"before-container\" }, [_vm._t(\"before-container\")], 2), _vm._v(\" \"), _c(\"template\", { slot: \"after-container\" }, [_vm._t(\"after-container\")], 2)], 2);\n};\nvar __vue_staticRenderFns__$1 = [];\n__vue_render__$1._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$1 = undefined;\n/* scoped */\nvar __vue_scope_id__$1 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$1 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$1 = false;\n/* component normalizer */\nfunction __vue_normalize__$1(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"/home/akryum/Projects/vue-virtual-scroller/src/components/DynamicScroller.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar DynamicScroller = __vue_normalize__$1({ render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 }, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, undefined, undefined);\n\nvar script$2 = {\n  name: 'DynamicScrollerItem',\n\n  inject: ['vscrollData', 'vscrollBus'],\n\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n\n    watchData: {\n      type: Boolean,\n      default: false\n    },\n\n    active: {\n      type: Boolean,\n      required: true\n    },\n\n    sizeDependencies: {\n      type: [Array, Object],\n      default: null\n    },\n\n    emitResize: {\n      type: Boolean,\n      default: false\n    },\n\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  computed: {\n    id: function id() {\n      return this.item[this.vscrollData.keyField];\n    },\n    height: function height() {\n      return this.vscrollData.heights[this.id] || 0;\n    }\n  },\n\n  watch: {\n    watchData: 'updateWatchData',\n\n    id: function id() {\n      if (!this.height) {\n        this.onDataUpdate();\n      }\n    },\n    active: function active(value) {\n      if (value && this.$_pendingVScrollUpdate) {\n        this.updateSize();\n      }\n    }\n  },\n\n  created: function created() {\n    var _this = this;\n\n    if (this.$isServer) return;\n\n    this.$_forceNextVScrollUpdate = false;\n    this.updateWatchData();\n\n    var _loop = function _loop(k) {\n      _this.$watch(function () {\n        return _this.sizeDependencies[k];\n      }, _this.onDataUpdate);\n    };\n\n    for (var k in this.sizeDependencies) {\n      _loop(k);\n    }\n\n    this.vscrollBus.$on('vscroll:update', this.onVscrollUpdate);\n    this.vscrollBus.$on('vscroll:update-size', this.onVscrollUpdateSize);\n  },\n  mounted: function mounted() {\n    if (this.vscrollData.active) {\n      this.updateSize();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.vscrollBus.$off('vscroll:update', this.onVscrollUpdate);\n    this.vscrollBus.$off('vscroll:update-size', this.onVscrollUpdateSize);\n  },\n\n\n  methods: {\n    updateSize: function updateSize() {\n      if (this.active && this.vscrollData.active) {\n        if (!this.$_pendingSizeUpdate) {\n          this.$_pendingSizeUpdate = true;\n          this.$_forceNextVScrollUpdate = false;\n          this.$_pendingVScrollUpdate = false;\n          if (this.active && this.vscrollData.active) {\n            this.computeSize(this.id);\n          }\n        }\n      } else {\n        this.$_forceNextVScrollUpdate = true;\n      }\n    },\n    getSize: function getSize() {\n      return this.$el.getBoundingClientRect();\n    },\n    updateWatchData: function updateWatchData() {\n      var _this2 = this;\n\n      if (this.watchData) {\n        this.$_watchData = this.$watch('data', function () {\n          _this2.onDataUpdate();\n        }, {\n          deep: true\n        });\n      } else if (this.$_watchData) {\n        this.$_watchData();\n        this.$_watchData = null;\n      }\n    },\n    onVscrollUpdate: function onVscrollUpdate(_ref) {\n      var force = _ref.force;\n\n      if (!this.active && force) {\n        this.$_pendingVScrollUpdate = true;\n      }\n      if (this.$_forceNextVScrollUpdate || force || !this.height) {\n        this.updateSize();\n      }\n    },\n    onDataUpdate: function onDataUpdate() {\n      this.updateSize();\n    },\n    computeSize: function computeSize(id) {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        if (_this3.id === id) {\n          var size = _this3.getSize();\n          if (size.height && _this3.height !== size.height) {\n            _this3.$set(_this3.vscrollData.heights, _this3.id, size.height);\n            if (_this3.emitResize) _this3.$emit('resize', _this3.id);\n          }\n        }\n        _this3.$_pendingSizeUpdate = false;\n      });\n    }\n  },\n\n  render: function render(h) {\n    return h(this.tag, this.$slots.default);\n  }\n};\n\n/* script */\nvar __vue_script__$2 = script$2;\n\n/* template */\n\n/* style */\nvar __vue_inject_styles__$2 = undefined;\n/* scoped */\nvar __vue_scope_id__$2 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$2 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$2 = undefined;\n/* component normalizer */\nfunction __vue_normalize__$2(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"/home/akryum/Projects/vue-virtual-scroller/src/components/DynamicScrollerItem.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar DynamicScrollerItem = __vue_normalize__$2({}, __vue_inject_styles__$2, __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2, __vue_module_identifier__$2, undefined, undefined);\n\nfunction IdState () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$idProp = _ref.idProp,\n      idProp = _ref$idProp === undefined ? function (vm) {\n    return vm.item.id;\n  } : _ref$idProp;\n\n  var store = {};\n  var vm = new __WEBPACK_IMPORTED_MODULE_0_vue___default.a({\n    data: function data() {\n      return {\n        store: store\n      };\n    }\n  });\n\n  // @vue/component\n  return {\n    data: function data() {\n      return {\n        idState: null\n      };\n    },\n    created: function created() {\n      var _this = this;\n\n      this.$_id = null;\n      if (typeof idProp === 'function') {\n        this.$_getId = function () {\n          return idProp.call(_this, _this);\n        };\n      } else {\n        this.$_getId = function () {\n          return _this[idProp];\n        };\n      }\n      this.$watch(this.$_getId, {\n        handler: function handler(value) {\n          var _this2 = this;\n\n          this.$nextTick(function () {\n            _this2.$_id = value;\n          });\n        },\n\n        immediate: true\n      });\n      this.$_updateIdState();\n    },\n    beforeUpdate: function beforeUpdate() {\n      this.$_updateIdState();\n    },\n\n\n    methods: {\n      /**\n       * Initialize an idState\n       * @param {number|string} id Unique id for the data\n       */\n      $_idStateInit: function $_idStateInit(id) {\n        var factory = this.$options.idState;\n        if (typeof factory === 'function') {\n          var data = factory.call(this, this);\n          vm.$set(store, id, data);\n          this.$_id = id;\n          return data;\n        } else {\n          throw new Error('[mixin IdState] Missing `idState` function on component definition.');\n        }\n      },\n\n\n      /**\n       * Ensure idState is created and up-to-date\n       */\n      $_updateIdState: function $_updateIdState() {\n        var id = this.$_getId();\n        if (id == null) {\n          console.warn('No id found for IdState with idProp: \\'' + idProp + '\\'.');\n        }\n        if (id !== this.$_id) {\n          if (!store[id]) {\n            this.$_idStateInit(id);\n          }\n          this.idState = store[id];\n        }\n      }\n    }\n  };\n}\n\nfunction registerComponents(Vue$$1, prefix) {\n  Vue$$1.component(prefix + 'recycle-scroller', RecycleScroller);\n  Vue$$1.component(prefix + 'RecycleScroller', RecycleScroller);\n  Vue$$1.component(prefix + 'dynamic-scroller', DynamicScroller);\n  Vue$$1.component(prefix + 'DynamicScroller', DynamicScroller);\n  Vue$$1.component(prefix + 'dynamic-scroller-item', DynamicScrollerItem);\n  Vue$$1.component(prefix + 'DynamicScrollerItem', DynamicScrollerItem);\n}\n\nvar plugin$2 = {\n  // eslint-disable-next-line no-undef\n  version: \"1.0.0-beta.2\",\n  install: function install(Vue$$1, options) {\n    var finalOptions = Object.assign({}, {\n      installComponents: true,\n      componentsPrefix: ''\n    }, options);\n\n    for (var key in finalOptions) {\n      if (typeof finalOptions[key] !== 'undefined') {\n        config[key] = finalOptions[key];\n      }\n    }\n\n    if (finalOptions.installComponents) {\n      registerComponents(Vue$$1, finalOptions.componentsPrefix);\n    }\n  }\n};\n\n// Auto-install\nvar GlobalVue$2 = null;\nif (typeof window !== 'undefined') {\n  GlobalVue$2 = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue$2 = global.Vue;\n}\nif (GlobalVue$2) {\n  GlobalVue$2.use(plugin$2);\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (plugin$2);\n\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(13)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///449\n");

/***/ }),

/***/ 450:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.book\n    ? _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { cols: \"12\" } },\n            [_c(\"b-breadcrumb\", { attrs: { items: _vm.items } })],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-col\",\n            {\n              staticClass: \"sidebar-wrapper d-md-block\",\n              class: {\n                \"d-block d-sm-block\": _vm.menu,\n                \"d-none d-sm-none\": !_vm.menu\n              },\n              attrs: { cols: \"12\", sm: \"12\", md: \"4\" }\n            },\n            [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sidebar-nav\",\n                  style: \"max-width: \" + _vm.width\n                },\n                [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"float-left d-block d-sm-block d-md-none\",\n                      staticStyle: { width: \"calc(100% - 46px)\" }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        staticClass: \"mb-3\",\n                        attrs: {\n                          type: \"search\",\n                          placeholder: _vm.$t(\"search_title\")\n                        },\n                        model: {\n                          value: _vm.title,\n                          callback: function($$v) {\n                            _vm.title = $$v\n                          },\n                          expression: \"title\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"d-none d-sm-none d-md-block\" },\n                    [\n                      _c(\"b-form-input\", {\n                        staticClass: \"mb-3\",\n                        attrs: {\n                          type: \"search\",\n                          placeholder: _vm.$t(\"search_title\")\n                        },\n                        model: {\n                          value: _vm.title,\n                          callback: function($$v) {\n                            _vm.title = $$v\n                          },\n                          expression: \"title\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    {\n                      staticClass: \"d-inline d-sm-inline d-md-none\",\n                      on: {\n                        click: function($event) {\n                          _vm.toggleMenu()\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"b-button\",\n                        {\n                          staticStyle: { margin: \"5px 0px 19px 0px\" },\n                          attrs: { variant: \"link\" }\n                        },\n                        [\n                          _c(\"fa\", {\n                            attrs: { icon: \"times-circle\", \"fixed-width\": \"\" }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"book-contents\",\n                      style: \"height: \" + _vm.height\n                    },\n                    [\n                      _c(\n                        \"b-list-group\",\n                        [\n                          _c(\"DynamicScroller\", {\n                            staticClass: \"scroller\",\n                            attrs: {\n                              items: _vm.bookContents(_vm.book.pages),\n                              \"min-item-height\": 48,\n                              \"page-mode\": \"\"\n                            },\n                            scopedSlots: _vm._u([\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var item = ref.item\n                                  var index = ref.index\n                                  var active = ref.active\n                                  return [\n                                    _c(\n                                      \"DynamicScrollerItem\",\n                                      {\n                                        attrs: {\n                                          item: item,\n                                          active: active,\n                                          \"size-dependencies\": [item.title],\n                                          \"data-index\": index\n                                        }\n                                      },\n                                      [\n                                        item.is_header\n                                          ? _c(\n                                              \"b-list-group-item\",\n                                              {\n                                                staticClass: \"text-left\",\n                                                staticStyle: {\n                                                  \"background-color\":\n                                                    \"transparent\",\n                                                  border: \"none\"\n                                                }\n                                              },\n                                              [\n                                                _c(\"strong\", [\n                                                  _vm._v(_vm._s(item.title))\n                                                ])\n                                              ]\n                                            )\n                                          : _c(\n                                              \"b-list-group-item\",\n                                              {\n                                                attrs: {\n                                                  to: {\n                                                    name: \"books.read\",\n                                                    params: {\n                                                      slug: _vm.slug,\n                                                      page: item.id\n                                                    }\n                                                  }\n                                                },\n                                                on: {\n                                                  click: function($event) {\n                                                    _vm.toggleMenu()\n                                                  }\n                                                }\n                                              },\n                                              [\n                                                _vm._v(\n                                                  \"\\n                  \" +\n                                                    _vm._s(item.title) +\n                                                    \"\\n                \"\n                                                )\n                                              ]\n                                            )\n                                      ],\n                                      1\n                                    )\n                                  ]\n                                }\n                              }\n                            ])\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ]\n              )\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\"b-col\", { attrs: { cols: \"12\", sm: \"12\", md: \"8\" } }, [\n            _c(\n              \"div\",\n              {\n                staticClass: \"reader-container d-md-block\",\n                class: {\n                  \"d-none d-sm-none\": _vm.menu,\n                  \"d-block d-sm-block\": !_vm.menu\n                }\n              },\n              [\n                _c(\n                  \"b-card\",\n                  { staticClass: \"mb-2 reading-help\" },\n                  [\n                    _c(\n                      \"b-button\",\n                      {\n                        attrs: { size: \"sm\", variant: \"link\" },\n                        on: {\n                          click: function($event) {\n                            _vm.changeFontSize(\"up\")\n                          }\n                        }\n                      },\n                      [\n                        _c(\"fa\", {\n                          attrs: { icon: \"font\", \"fixed-width\": \"\" }\n                        }),\n                        _c(\"fa\", {\n                          attrs: { icon: \"sort-up\", \"fixed-width\": \"\" }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-button\",\n                      {\n                        attrs: { size: \"sm\", variant: \"link\" },\n                        on: {\n                          click: function($event) {\n                            _vm.changeFontSize(\"down\")\n                          }\n                        }\n                      },\n                      [\n                        _c(\n                          \"small\",\n                          [\n                            _c(\"fa\", {\n                              attrs: { icon: \"font\", \"fixed-width\": \"\" }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\"fa\", {\n                          attrs: { icon: \"sort-down\", \"fixed-width\": \"\" }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-button\",\n                      {\n                        staticClass: \"d-inline d-sm-inline d-md-none\",\n                        attrs: { size: \"sm\", variant: \"link\" },\n                        on: {\n                          click: function($event) {\n                            _vm.toggleMenu()\n                          }\n                        }\n                      },\n                      [\n                        _c(\"fa\", {\n                          attrs: { icon: \"bars\", \"fixed-width\": \"\" }\n                        }),\n                        _vm._v(\" \" + _vm._s(_vm.$t(\"contents\")))\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"transition\", { attrs: { name: \"fade\", mode: \"out-in\" } }, [\n                  _c(\n                    \"div\",\n                    { style: \"font-size: \" + _vm.fontSize },\n                    [\n                      _c(\"router-view\", {\n                        key: _vm.$route.fullPath,\n                        attrs: {\n                          firstId: _vm.getFirstId(_vm.book.pages),\n                          slug: _vm.slug\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ])\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      )\n    : _c(\"div\", { staticClass: \"my-4 text-center\" }, [\n        _c(\"img\", { attrs: { src: \"/svg-loaders/oval.svg\" } })\n      ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-c73f4858\", esExports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///450\n");

/***/ })

});