server {
	listen 80;
	rewrite ^ https://$server_name$request_uri? permanent;
	server_name backend.coleus.app www.backend.coleus.app;
	location /.well-known/acme-challenge/ {
		root /var/www/certbot;
	}
}

server {
	listen 443 ssl;

	#                          enables SSLv3/TLSv1, but not SSLv2 which is weak and should no longer be used.
	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;

	#                          disables all weak ciphers
	ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;

	server_name backend.coleus.app www.backend.coleus.app;

	##                         Access and error logs.
	error_log /var/log/nginx/backend.error.log;
	access_log /var/log/nginx/backend.access.log;

	##                         Keep alive timeout set to a greater value for SSL/TLS.
	keepalive_timeout 75 75;

	##                         See the keepalive_timeout directive in nginx.conf.
	##                         Server certificate and key.
	# ssl                        on;
	ssl_certificate /etc/letsencrypt/live/backend.coleus.app/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/backend.coleus.app/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_session_timeout 5m;

	##                         Strict Transport Security header for enhanced security. See http://www.chromium.org/sts.
	add_header Strict-Transport-Security "max-age=7200";

	root /var/www/backend/public;
	index index.php index.html;

	location ~ \.php$ {
		try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass backend:9000;
		fastcgi_index index.php;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
	}
	location / {
		try_files $uri $uri/ /index.php?$query_string;
		gzip_static on;
	}
}
